{"version":3,"file":"src_app_module_profile_profile_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACoE;AAKT;;;;;;;;;;;;;AAC3D,8CAA8C;AAOvC,MAAM,uBAAuB;IAkBlC,YACU,MAAc,EACd,WAAwB,EACxB,EAAe,EACf,MAAqB;QAHrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAe;QApB/B,cAAS,GAAG,iBAAiB;QAC7B,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAG,IAAI,CAAC;QACb,UAAK,GAAG,IAAI,CAAC;QACb,iBAAY,GAAG,IAAI,CAAC;QAGpB,eAAU,GAAG;YACX,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,EAAE;YAChB,gBAAgB,EAAE,EAAE;YACpB,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,kBAAa,GAAG,KAAK,CAAC;QACtB,eAAU,GAAG,KAAK,CAAC;QAQjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC;YACtB,YAAY,EAAE,CAAC,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,CAAC,CAAC,CAAC;YAC/D,YAAY,EAAE,CAAC,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,CAAC,CAAC,CAAC;YAC/D,gBAAgB,EAAE,CAAC,IAAI,EAAE,8DAAkB,CAAC,CAAC,+DAAmB,CAAC,CAAC,CAAC;SACpE,EAAE;YACD,SAAS,EAAE,wFAAqC,EAAE;SACnD,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,KAAK,CAAC;IAEd,UAAU;QAER,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,MAAM,QAAQ,GAAG;gBACf,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY;gBAC5C,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY;aAC7C,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;gBAC/D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,EAAE;oBACvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBACtC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;iBACvC;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBACpC,8BAA8B;oBAC9B,8CAA8C;oBAC9C,uDAAuD;oBACvD,MAAM;oBACN,kDAAkD;oBAClD,+DAA+D;oBAC/D,MAAM;oBACN,0FAA0F;oBAC1F,wDAAwD;oBACxD,MAAM;oBACN,MAAM;iBACP;YACH,CAAC,EACC,CAAC,KAAK,EAAE,EAAE;gBACR,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,gBAAgB,CAAC;YAC9C,CAAC,CACF,CAAC;SACH;IACH,CAAC;;8FAzEU,uBAAuB;qHAAvB,uBAAuB;QCdpC,yEAA4B;QAC1B,yEAAkB;QAChB,yEAA0B;QACxB,yEAA4C;QAC1C,wEAAyB;QAAA,0EAAe;QAAA,4DAAK;QAC/C,4DAAM;QACN,yEAA4B;QAC1B,0EAAsD;QAA1B,mJAAY,gBAAY,IAAC;QACnD,yEAA8C;QAC5C,yEAAwB;QACtB,4EAA0B;QAAA,yEAAa;QAAA,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QAAA,4DAAQ;QACzD,sFAAwD;QACtD,wEAC6B;QAC3B,gFAA6D;QAAvB,0KAAsB;QAAC,wDAA0C;QAAA,4DAAW;QACtH,4DAAiB;QACnB,4DAAM;QACN,0EAAwB;QACtB,6EAA0B;QAAC,0EAAa;QAAA,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QAAA,4DAAQ;QAC1D,sFAAwD;QACtD,wEAC6B;QAC3B,gFAA+D;QAAzB,4KAAwB;QAAC,wDAA2C;QAAA,4DAAW;QACzH,4DAAiB;QACnB,4DAAM;QACN,0EAAwB;QACtB,6EAA8B;QAAC,8EAAiB;QAAA,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QAAA,4DAAQ;QAClE,sFAAwD;QACtD,wEACiC;QAC/B,gFAA+D;QAAzB,4KAAwB;QAAC,wDAA2C;QAAA,4DAAW;QACzH,4DAAiB;QACnB,4DAAM;QAEN,2EAA4D;QAC1D,8EAAyD;QAAA,iEAAK;QAAA,4DAAS;QACvE,8EAAuE;QAAA,kEAAM;QAAA,4DAAS;QAExF,4DAAM;QAER,4DAAM;QACR,4DAAO;QACT,4DAAM;QAGR,4DAAM;QACR,4DAAM;QA9CR,4DAA4B;;QAOd,0DAAqB;QAArB,kFAAqB;QAKZ,0DAAgD;QAAhD,6GAAgD;QAEQ,0DAA0C;QAA1C,2GAA0C;QAMlG,0DAAgD;QAAhD,6GAAgD;QAEU,0DAA2C;QAA3C,4GAA2C;QAMrG,0DAAoD;QAApD,iHAAoD;QAEM,0DAA2C;QAA3C,4GAA2C;QAMpF,0DAAsB;QAAtB,8IAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC9D;AAEA;AAOA;;;;;;;;;;;;;;;;;;;;;AC8BoBK,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;AAF6CA,IAAAA,yDAAAA;AAC3CA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAJRA,IAAAA,sEAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AAGFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,oEAAAA;;;;;AANkCA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AACCA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAS7BA,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;AAF6CA,IAAAA,yDAAAA;AAC3CA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAHNA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AAGFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;;;;;AALuBA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AACUA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;;;AAfvCA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AAAyCA,IAAAA,qDAAAA;AAAcA,IAAAA,6DAAAA;AAAIA,IAAAA,qDAAAA;AAACA,IAAAA,2DAAAA;AAAKA,IAAAA,2DAAAA;AACjEA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AASAA,IAAAA,yDAAAA,uFAAAA,qEAAAA;AASFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;;;;;;;AAnBmBA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA,8BAAoB,UAApB,EAAoBC,GAApB;;;;;;;;AAqMTD,IAAAA,sEAAAA;AACEA,IAAAA,6DAAAA;AAAmDA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;;AAAA;;AAAA,aAASE,YAAT;AAA0B,KAA1B;AACjDF,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AACAA,IAAAA,6DAAAA;AAAyDA,IAAAA,yDAAAA;AAAAA,MAAAA,4DAAAA;AAAA;AAAA;AAAA,aAAUG,sCAAV;AAAoC,KAApC;AAAzDH,IAAAA,2DAAAA;AAEFA,IAAAA,2DAAAA;AACFA,IAAAA,oEAAAA;;;;;;;;;AALMA,IAAAA,wDAAAA;AAAAA,IAAAA,qEAAAA;AAHKA,IAAAA,yDAAAA;;;;;;AAUTA,IAAAA,6DAAAA;AACEA,IAAAA,wDAAAA;AAIAA,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;;AAFIA,IAAAA,wDAAAA;AAAAA,IAAAA,qEAAAA;AAHKA,IAAAA,yDAAAA;;;;;;AArBjBA,IAAAA,sEAAAA;AAGEA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AAAyCA,IAAAA,qDAAAA;AAErCA,IAAAA,2DAAAA;AACJA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AAWAA,IAAAA,yDAAAA,+GAAAA,qEAAAA;AASFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,oEAAAA;;;;;;;;;AA1B6CA,IAAAA,wDAAAA;AAAAA,IAAAA,gEAAAA;AAIxBA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA,gGAAoC,UAApC,EAAoCI,IAApC;;;;;;AAyBnBJ,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AAAyCA,IAAAA,qDAAAA;AAErCA,IAAAA,2DAAAA;AACJA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,wDAAAA;AAGFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;;;;;;;;;;AAV2CA,IAAAA,wDAAAA;AAAAA,IAAAA,gEAAAA;AAK9BA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA,uGAA0C,aAA1C,EAA0CK,wDAA1C,EAA0C,aAA1C,EAA0C,yGAA1C;;;;;;AA7CnBL,IAAAA,sEAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AAAMA,IAAAA,qDAAAA;AAAiBA,IAAAA,2DAAAA;AACvBA,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;AACAA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AAgCAA,IAAAA,yDAAAA,gGAAAA,qEAAAA;AAeFA,IAAAA,2DAAAA;AACFA,IAAAA,oEAAAA;;;;;;;;;;AAjDOA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AACYA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA,uLACZ,UADY,EACZM,IADY;;;;;;AA6DTN,IAAAA,6DAAAA;AACEA,IAAAA,qDAAAA;AACFA,IAAAA,2DAAAA;;;;;AAF6CA,IAAAA,yDAAAA;AAC3CA,IAAAA,wDAAAA;AAAAA,IAAAA,iEAAAA;;;;;;AAXZA,IAAAA,sEAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AAAMA,IAAAA,qDAAAA;AAAiBA,IAAAA,2DAAAA;AACvBA,IAAAA,wDAAAA;AACFA,IAAAA,2DAAAA;AACAA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AAAyCA,IAAAA,qDAAAA;AAAcA,IAAAA,2DAAAA;AACvDA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,6DAAAA;AACEA,IAAAA,yDAAAA;AAGFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;AACFA,IAAAA,2DAAAA;AAEFA,IAAAA,oEAAAA;;;;;AAToBA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;AACmBA,IAAAA,wDAAAA;AAAAA,IAAAA,yDAAAA;;;;ID7QpCO,oBAAoB,SAApBA,oBAAoB;AA2B/BC,cACUC,MADV,EAEUC,EAFV,EAGUC,WAHV,EAIUC,mBAJV,EAKUC,WALV,EAMUC,YANV,EAOUC,WAPV,EAQUC,aARV,EASUC,QATV,EAS4B;AARlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCV,wBAAe,KAAf;AAEA,sBAAa,KAAb;AACA,sBAAa;AACXC,aAAO,EAAE,IADE;AAEXC,cAAQ,EAAE;AAFC,KAAb;AAKA,yBAAqB,EAArB;AACA,qBAAY,KAAZ;AACA,kBAAS,IAAT;AACA,qBAAY,gBAAZ;AACA,uBAAmB,EAAnB;AACA,+BAA2B,EAA3B;AACA,sCAAkC,EAAlC;AACA,yBAAqB,EAArB;AAGA,oCAAgC,EAAhC;AAEA,uBAAc,CAAC,SAAD,EAAY,WAAZ,EAAyB,YAAzB,EAAuC,UAAvC,EAAmD,aAAnD,EAAkE,gBAAlE,EAAoF,gBAApF,EAAsG,kBAAtG,CAAd;AACA,iCAA6B,EAA7B;AACA,6BAA6B,KAA7B;AACA,wBAAwB,KAAxB;AA0QA,yBAAwB,CAAxB;AA7PE,SAAKC,OAAL,GAAe,KAAKV,EAAL,CAAQW,KAAR,CAAc;AAC3BH,aAAO,EAAE,CAAC;AAAEI,aAAK,EAAE,IAAT;AAAeC,gBAAQ,EAAE;AAAzB,OAAD,EAAkC5B,+DAAA,CAAmB,CAACA,6DAAD,CAAnB,CAAlC,CADkB;AAE3B+B,eAAS,EAAE,CAAC;AAAEJ,aAAK,EAAE,EAAT;AAAaC,gBAAQ,EAAE;AAAvB,OAAD,CAFgB;AAG3BI,cAAQ,EAAE,CAAC;AAAEL,aAAK,EAAE,IAAT;AAAeC,gBAAQ,EAAE;AAAzB,OAAD,EAAkC5B,+DAAA,CAAmB,CAACA,gEAAD,CAAnB,CAAlC,CAHiB;AAI3BkC,gBAAU,EAAE,CAAC;AAAEP,aAAK,EAAE,EAAT;AAAaC,gBAAQ,EAAE;AAAvB,OAAD,CAJe;AAK3BO,YAAM,EAAE,CAAC,IAAD,CALmB;AAM3BC,cAAQ,EAAE,CAAC,EAAD,CANiB;AAO3BC,iBAAW,EAAE,CAAC;AAAEV,aAAK,EAAE,IAAT;AAAeC,gBAAQ,EAAE;AAAzB,OAAD,CAPc;AAQ3BU,oBAAc,EAAE,CAAC;AAAEX,aAAK,EAAE,IAAT;AAAeC,gBAAQ,EAAE;AAAzB,OAAD,EAAkC5B,+DAAA,CAAmB,CAACA,iEAAA,CAAqB,CAArB,CAAD,EAA0BA,iEAAA,CAAqB,EAArB,CAA1B,CAAnB,CAAlC,CARW;AAS3ByC,oBAAc,EAAE,CAAC;AAAEd,aAAK,EAAE,IAAT;AAAeC,gBAAQ,EAAE;AAAzB,OAAD,CATW;AAU3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAc,qBAAe,EAAE,EAnBU;AAoB3BC,sBAAgB,EAAE,CAAC;AAAEhB,aAAK,EAAE,IAAT;AAAeC,gBAAQ,EAAE;AAAzB,OAAD,EAAkC5B,+DAAA,CAAmB,CAACA,iEAAA,CAAqB,CAArB,CAAD,EAA0BA,iEAAA,CAAqB,EAArB,CAA1B,CAAnB,CAAlC,CApBS;AAqB3B4C,gBAAU,EAAE,IAAI3C,sDAAJ,CAAc,EAAd,CArBe;AAsB3B4C,cAAQ,EAAE,CAAC,EAAD;AAtBiB,KAAd,CAAf;AAyBA,SAAKzB,WAAL,CAAiB0B,WAAjB,CAA6BC,SAA7B,CAAwCC,IAAD,IAAS;AAC9C,UAAIA,IAAJ,EAAU;AACR,aAAKF,WAAL,GAAmBE,IAAnB;AACA,aAAKC,SAAL,GAAiB,IAAjB;AACA,aAAKC,MAAL,GAAc,KAAKJ,WAAL,CAAiBK,EAA/B;AAED;AACF,KAPD;AAQD;;AAEDC,UAAQ;AAAK,SAAKC,aAAL;AAAuB;;AAEpCA,eAAa;AACX,QAAIC,KAAK,GAAG;AACV,sBAAgB,IADN;AAEV,cAAQ,CAFE;AAGV,kBAAY,CAHF;AAIV,gBAAU;AAJA,KAAZ;AAMA,SAAKrC,mBAAL,CAAyBsC,mBAAzB,CAA6CD,KAA7C,EAAoDP,SAApD,CAA+DS,GAAD,IAAQ;AACpE,UAAIA,GAAJ,EAAS;AACP,aAAKC,WAAL,GAAmBD,GAAG,CAACR,IAAvB,CADO,CAEP;;AACA,aAAKU,aAAL,GAHO,CAIP;AACD;AACF,KAPD;;AAQA,QAAI,KAAKZ,WAAT,EAAsB;AACpB,UAAIa,OAAO,GAAG,EAAd;AACA,WAAKb,WAAL,CAAiBc,QAAjB,CAA0BC,GAA1B,CAA+BC,IAAD,IAAS;AAAGH,eAAO,CAACI,IAAR,CAAa;AAAE,0BAAgB,UAAlB;AAA8B,mBAASD,IAAvC;AAA6C,2BAAiB;AAA9D,SAAb;AAAoF,OAA9H;AACA,WAAK5C,WAAL,CAAiB8C,WAAjB,CAA6B;AAAE,gBAAQ,CAAV;AAAa,oBAAY,CAAzB;AAA4B,kBAAU,IAAtC;AAA4C,wBAAgB;AAAE,+BAAqB,CAAvB;AAA0B,qBAAWL;AAArC;AAA5D,OAA7B,EAA2IZ,SAA3I,CAAsJS,GAAD,IAAQ;AAC3J,YAAIA,GAAJ,EAAS;AAAE,eAAKS,aAAL,GAAqBT,GAAG,CAACR,IAAzB;AAA+B,eAAKkB,WAAL;AAAqB;AAChE,OAFD;AAGD;AACF;;AACDA,aAAW;AACT,QAAI,KAAKC,UAAL,IAAmB,KAAKA,UAAL,CAAgBhC,MAAvC,EACE,KAAK,IAAIiC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKH,aAAL,CAAmBI,MAA/C,EAAuDD,KAAK,EAA5D,EAAgE;AAC9D,YAAME,OAAO,GAAG,KAAKL,aAAL,CAAmBG,KAAnB,CAAhB;;AACA,UAAIE,OAAO,CAACnB,EAAR,IAAc,KAAKgB,UAAL,CAAgBhC,MAAlC,EAA0C;AAAE,aAAKV,OAAL,CAAa8C,UAAb,CAAwB;AAAEpC,gBAAM,EAAEmC,OAAO,CAACE;AAAlB,SAAxB;AAAmD;AAAQ,OAAvG,MAA6G;AAC9G;AACJ;;AAEDC,iBAAe;AACb,QAAI,KAAK3B,WAAL,CAAiB4B,QAAjB,IAA6B,UAAjC,EAA6C;AAC3C,WAAKC,WAAL,CAAiBd,GAAjB,CAAsBe,KAAD,IAAU;AAC7B,YAAI,KAAKC,qBAAL,IAA8B,KAAKA,qBAAL,CAA2BR,MAA3B,GAAoC,CAAtE,EAAyE;AACvE,eAAKQ,qBAAL,CAA2BC,OAA3B,CAAmCR,OAAO,IAAG;;;AAC3C,gBAAIM,KAAK,KAAK,YAAM,CAACN,OAAO,CAACS,WAAT,CAAN,MAA2B,IAA3B,IAA2BC,aAA3B,GAA2B,MAA3B,GAA2BA,GAAEC,OAAF,CAAU,KAAV,EAAiB,EAAjB,EAAqBC,WAArB,EAAhC,CAAT,EAA8E;AAC5E,kBAAIZ,OAAO,CAACa,UAAZ,EAAwB;AACtB,wBAAQP,KAAR;AACE,uBAAK,WAAL;AAAkB,yBAAKnD,OAAL,CAAa2D,GAAb,CAAiB,WAAjB,EAA8BC,MAA9B;AAAwC;;AAC1D,uBAAK,UAAL;AAAiB,yBAAK5D,OAAL,CAAa2D,GAAb,CAAiB,UAAjB,EAA6BC,MAA7B;AAAuC;;AACxD,uBAAK,YAAL;AAAmB,yBAAK5D,OAAL,CAAa2D,GAAb,CAAiB,YAAjB,EAA+BC,MAA/B;AAAyC;;AAC5D,uBAAK,SAAL;AAAgB,yBAAK5D,OAAL,CAAa2D,GAAb,CAAiB,SAAjB,EAA4BC,MAA5B;AAAsC;;AACtD,uBAAK,aAAL;AAAoB,yBAAK5D,OAAL,CAAa2D,GAAb,CAAiB,aAAjB,EAAgCC,MAAhC;AAA0C;;AAC9D,uBAAK,gBAAL;AAAuB,yBAAK5D,OAAL,CAAa2D,GAAb,CAAiB,gBAAjB,EAAmCC,MAAnC;AAA6C;;AACpE,uBAAK,kBAAL;AAAyB,yBAAK5D,OAAL,CAAa2D,GAAb,CAAiB,kBAAjB,EAAqCC,MAArC;AAA+C;;AACxE,uBAAK,gBAAL;AAAuB,yBAAK5D,OAAL,CAAa2D,GAAb,CAAiB,gBAAjB,EAAmCC,MAAnC;AAA6C,yBAAKC,iBAAL,GAAyB,IAAzB;AAA+B;AARrG;AAUD;AACF;AACF,WAfD;AAgBD;AACF,OAnBD;AAoBD,KArBD,MAqBO;AACL,WAAK7D,OAAL,CAAa2D,GAAb,CAAiB,WAAjB,EAA8BC,MAA9B;AACA,WAAK5D,OAAL,CAAa2D,GAAb,CAAiB,UAAjB,EAA6BC,MAA7B;AACA,WAAK5D,OAAL,CAAa2D,GAAb,CAAiB,YAAjB,EAA+BC,MAA/B,GAHK,CAIL;;AACA,WAAK5D,OAAL,CAAa2D,GAAb,CAAiB,aAAjB,EAAgCC,MAAhC;AACA,WAAK5D,OAAL,CAAa2D,GAAb,CAAiB,gBAAjB,EAAmCC,MAAnC;AACA,WAAK5D,OAAL,CAAa2D,GAAb,CAAiB,kBAAjB,EAAqCC,MAArC;AACA,WAAK5D,OAAL,CAAa2D,GAAb,CAAiB,gBAAjB,EAAmCC,MAAnC;AACA,WAAKC,iBAAL,GAAyB,IAAzB;AACD;AACF;;AAED5B,eAAa;AACX,SAAK1C,WAAL,CAAiBuE,WAAjB,CAA6B;AAAEpC,QAAE,EAAE,KAAKD;AAAX,KAA7B,EAAkDH,SAAlD,CAA6DyC,QAAD,IAAa;AAEvE,UAAIA,QAAQ,IAAIA,QAAQ,CAACxC,IAAzB,EAA+B;AAC7B,aAAKmB,UAAL,GAAkBqB,QAAQ,CAACxC,IAA3B;AACA,aAAKvB,OAAL,CAAa8C,UAAb,CAAuBkB,kBAAMD,QAAQ,CAACxC,IAAf,CAAvB;;AACA,YAAIwC,QAAQ,CAACxC,IAAT,CAAcN,eAAd,IAAiC8C,QAAQ,CAACxC,IAAT,CAAc0C,IAAd,IAAsB,UAA3D,EAAuE;AACrE,cAAIF,QAAQ,CAACxC,IAAT,CAAc2C,cAAd,CAA6B,iBAA7B,KAAmDH,QAAQ,CAACxC,IAAT,CAAcN,eAAd,CAA8B,CAA9B,CAAvD,EAAyF;AACvF,iBAAKjB,OAAL,CAAa8C,UAAb,CAAwB;AAAE7B,6BAAe,EAAE8C,QAAQ,CAACxC,IAAT,CAAcN,eAAd,CAA8B,CAA9B;AAAnB,aAAxB;AACD,WAFD,MAEO,CACL;AACD;AACF,SAND,MAMO,IAAI8C,QAAQ,CAACxC,IAAT,CAAcN,eAAd,IAAiC8C,QAAQ,CAACxC,IAAT,CAAc0C,IAAd,IAAsB,UAA3D,EAAuE;AAC5E,eAAKE,YAAL,GAAoB,IAApB;AACA,eAAKnE,OAAL,CAAa8C,UAAb,CAAwB;AAAE7B,2BAAe,EAAE8C,QAAQ,CAACxC,IAAT,CAAcN;AAAjC,WAAxB;AACD,SAZ4B,CAa7B;;;AACA,aAAKmD,cAAL,GAAsB,KAAKpE,OAAL,CAAa2D,GAAb,CAAiB,YAAjB,CAAtB;AACA,aAAKS,cAAL,CAAoBC,KAApB;AACA,aAAKC,mBAAL,GAA2B,EAA3B;AACA,aAAKC,aAAL,GAAqB,EAArB;AACA,aAAK9B,WAAL;;AAEA,YAAKsB,QAAQ,CAACxC,IAAT,IAAiBwC,QAAQ,CAACxC,IAAT,CAAciD,oBAA/B,IAAuD,KAAKxC,WAAL,CAAiBY,MAAjB,GAA0B,CAAjF,IAAsFmB,QAAQ,CAACxC,IAAT,CAAciD,oBAAd,CAAmC5B,MAAnC,GAA4C,CAAvI,EAA2I;AACzI,eAAKZ,WAAL,CAAiB,CAAjB,EAAoByC,QAApB,CAA6BtD,UAA7B,CAAwCiB,GAAxC,CAA6Cb,IAAD,IAAS;;;AACnD,gBAAI,CAAC,KAAK2B,WAAL,CAAiBwB,QAAjB,CAA0B,YAAM,CAACnD,IAAI,CAAC+B,WAAN,CAAN,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwB,MAAxB,GAAwBA,GAAEC,OAAF,CAAU,KAAV,EAAiB,EAAjB,EAAqBC,WAArB,EAAlD,CAAL,EAA4F;AAC1F,kBAAIlC,IAAI,CAACoD,SAAT,EAAoB;AAClB,qBAAKJ,aAAL,CAAmBjC,IAAnB,CAAwBf,IAAxB;AACA,qBAAK+C,mBAAL,CAAyBhC,IAAzB,CAA8Bf,IAAI,CAACqD,aAAnC;;AACA,oBAAIC,MAAM,CAACtD,IAAI,CAACuD,aAAN,CAAN,CAA2BrB,WAA3B,MAA4C,OAAhD,EAAyD;AACvD,uBAAKW,cAAL,CAAoB9B,IAApB,CAAyB,KAAKhD,EAAL,CAAQW,KAAR,CAAc;AACrC,qBAACsB,IAAI,CAACqD,aAAN,GAAsB,CAACrD,IAAI,CAACrB,KAAN,EAAa3B,gEAAb,CADe;AAErC,qBAAC,GAAGgD,IAAI,CAACqD,aAAa,MAAtB,GAA+B,CAACrD,IAAI,CAACrB,KAAN;AAFM,mBAAd,CAAzB;AAID,iBALD,MAKO;AACL,uBAAKkE,cAAL,CAAoB9B,IAApB,CAAyB,KAAKhD,EAAL,CAAQW,KAAR,CAAc;AAAE,qBAACsB,IAAI,CAACqD,aAAN,GAAsB,CAACrD,IAAI,CAACrB,KAAN,EAAa3B,gEAAb;AAAxB,mBAAd,CAAzB;AACD;AAEF,eAZD,MAYO;AACL,qBAAKwG,wBAAL,CAA8BzC,IAA9B,CAAmCf,IAAnC;AACD;AACF,aAhBD,MAgBO;AACL,kBAAIA,IAAI,CAACoD,SAAT,EAAoB;AAAE,qBAAKvB,qBAAL,CAA2Bd,IAA3B,CAAgCf,IAAhC;AAAwC,eAA9D,MAAoE;AAClE,qBAAKwD,wBAAL,CAA8BzC,IAA9B,CAAmCf,IAAnC;AACD;AACF;AACF,WAtBD;AAuBD;;AACD,aAAKyB,eAAL;AACD,OA9CD,MA8CO;AACL,aAAK3D,MAAL,CAAY2F,aAAZ,CAA0B,WAA1B;AACD;AACF,KAnDD;AAoDD;;AAEKC,YAAU;AAAA;;AAAA;;;AACd,UAAI,KAAI,CAACjF,OAAL,CAAakF,KAAjB,EAAwB;AACtB,YAAI,KAAI,CAACd,cAAL,IAAuB,KAAI,CAACA,cAAL,CAAoBxB,MAApB,GAA6B,CAAxD,EAA2D;AACzD,eAAI,CAACwB,cAAL,CAAoBe,QAApB,CAA6B9B,OAA7B,CAAqC,CAAC+B,OAAD,EAAeC,CAAf,KAAoB;AAAG1G,YAAAA,4EAAqB,CAACyG,OAAD,CAArB;AAAgC,WAA5F;AACD;;AACD1G,QAAAA,0EAAmB,CAAC,KAAI,CAACsB,OAAN,CAAnB;AACA,aAAI,CAACsF,UAAL,GAAkB,IAAlB,CALsB,CAMtB;AACA;AACA;AACA;;AACA,YAAIC,YAAY,GAAQ,EAAxB;;AACA,YAAI,KAAI,CAACnB,cAAL,IAAuB,KAAI,CAACA,cAAL,CAAoBxB,MAApB,GAA6B,CAAxD,EAA2D;AACzD,eAAI,CAACwB,cAAL,CAAoBe,QAApB,CAA6B9B,OAA7B,CAAqC,CAAC+B,OAAD,EAAeC,CAAf,KAAoB;AAAG1G,YAAAA,4EAAqB,CAACyG,OAAD,CAArB;AAAgC,WAA5F;;AACA,eAAI,CAACpF,OAAL,CAAaE,KAAb,CAAmBiB,UAAnB,CAA8BiB,GAA9B,CAAkC,CAACb,IAAD,EAAO8D,CAAP,KAAY;AAC5CrB,kBAAM,CAACwB,IAAP,CAAYjE,IAAZ,EAAkB8B,OAAlB,CAA2BoC,GAAD,IAAQ;AAChC,kBAAI,CAACA,GAAG,CAACf,QAAJ,CAAa,MAAb,CAAL,EACEa,YAAY,CAACjD,IAAb,CAAiB0B,gCAAM,KAAI,CAACO,aAAL,CAAmBc,CAAnB,CAAN,GAA2B;AAAE,iCAAiBI,GAAnB;AAAwB,yBAASlE,IAAI,CAACkE,GAAD;AAArC,eAA3B,CAAjB;AACH,aAHD;AAID,WALD;AAMD;;AACD,aAAI,CAACrC,qBAAL,CAA2BhB,GAA3B,CAAgCb,IAAD,IAAS;;;AACtC,kBAAQ,YAAM,CAACA,IAAI,CAAC+B,WAAN,CAAN,MAAwB,IAAxB,IAAwBC,aAAxB,GAAwB,MAAxB,GAAwBA,GAAEC,OAAF,CAAU,KAAV,EAAiB,EAAjB,EAAqBC,WAArB,EAAhC;AACE,iBAAK,WAAL;AAAkB8B,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBI;AAA5B,eAAV,CAAjB;AAAqE;;AACvF,iBAAK,SAAL;AAAgBiF,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBJ;AAA5B,eAAV,CAAjB;AAAmE;;AACnF,iBAAK,UAAL;AAAiByF,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBK;AAA5B,eAAV,CAAjB;AAAoE;;AACrF,iBAAK,YAAL;AAAmBgF,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBO;AAA5B,eAAV,CAAjB;AAAsE;;AACzF,iBAAK,aAAL;AAAoB8E,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBU;AAA5B,eAAV,CAAjB;AAAuE;;AAC3F,iBAAK,gBAAL;AAAuB2E,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBW;AAA5B,eAAV,CAAjB;AAA0E;;AACjG,iBAAK,kBAAL;AAAyB0E,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBgB;AAA5B,eAAV,CAAjB;AAA4E;;AACrG,iBAAK,gBAAL;AAAuBqE,0BAAY,CAACjD,IAAb,CAAiB0B,gCAAMzC,IAAN,GAAU;AAAErB,qBAAK,EAAE,KAAI,CAACF,OAAL,CAAaE,KAAb,CAAmBc;AAA5B,eAAV,CAAjB;AAA0E;AARnG;AAUD,SAXD;;AAaAuE,oBAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkB,GAAG,KAAI,CAACR,wBAA1B,CAAf;AACA,YAAIxD,IAAI,mCAAQ,KAAI,CAACvB,OAAL,CAAaE,KAArB,GAA0B;AAAEsE,8BAAoB,EAAEe;AAAxB,SAA1B,CAAR,CAlCsB,CAmCtB;AACA;AACA;AACA;;AACA,YAAI,KAAI,CAACvF,OAAL,CAAaE,KAAb,CAAmBe,eAAnB,IAAsC,YAAI,CAACI,WAAL,MAAgB,IAAhB,IAAgBkC,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEN,QAAlB,KAA8B,aAAxE,EAAuF;AACrF,cAAIyC,IAAI,GAAG,KAAI,CAACvB,YAAL,GAAoB,KAAI,CAACnE,OAAL,CAAaE,KAAb,CAAmBe,eAAvC,GACR,KAAI,CAACjB,OAAL,CAAaE,KAAb,CAAmBe,eAAnB,CAAmC2B,MAAnC,GAA4C,CAA7C,GAAkD,CAAC,KAAI,CAAC5C,OAAL,CAAaE,KAAb,CAAmBe,eAApB,CAAlD,GAAyF,EAD3F;AAEAM,cAAI,mCAAQA,IAAR,GAAY;AAAEN,2BAAe,EAAEyE;AAAnB,WAAZ,CAAJ;AACD,SAJD,MAKK;AAAEnE,cAAI,mCAAQA,IAAR,GAAY;AAAEN,2BAAe,EAAE;AAAnB,WAAZ,CAAJ;AAAyC;;AAEhD,eAAOM,IAAI,CAACJ,UAAZ;AACAI,YAAI,CAAC,UAAD,CAAJ,GAAmBA,IAAI,CAACjB,SAAL,GAAiB,GAAjB,GAAuBiB,IAAI,CAAChB,QAA/C;;AACA,YAAI,KAAI,CAACiB,SAAT,EAAoB;AAClB,eAAI,CAACjC,WAAL,CAAiBoG,QAAjB,CAAyB3B,gCAAMzC,IAAN,GAAU;AAAEG,cAAE,EAAE,KAAI,CAACD,MAAX;AAAmBmE,oBAAQ,EAAE;AAA7B,WAAV,CAAzB,EAAwEtE,SAAxE,CAAmFyC,QAAD,IAAa;AAC7F,iBAAI,CAACuB,UAAL,GAAkB,KAAlB;;AACA,gBAAIvB,QAAQ,CAAC8B,MAAT,IAAmB,IAAvB,EAA6B;AAC3B,mBAAI,CAAClG,WAAL,CAAiBmG,UAAjB,CAA2B9B,gCAAM,KAAI,CAAC3C,WAAX,GAA2B0C,QAAQ,CAACxC,IAApC,CAA3B;;AACA,kBAAI,KAAI,CAACF,WAAL,CAAiB4B,QAAjB,IAA6B,UAAjC,EAA6C;AAC3C,qBAAI,CAAC5D,MAAL,CAAY2F,aAAZ,CAA0B,WAA1B;AACD,eAFD,MAEO;AACL,qBAAI,CAACnF,QAAL,CAAckG,IAAd;AACD;AAEF,aARD,MAQO;AACL,mBAAI,CAACrG,YAAL,CAAkBsG,KAAlB,CAAwBjC,QAAQ,CAACkC,OAAjC;;AACAlC,sBAAQ,CAACiC,KAAT,CAAe5D,GAAf,CAAmB8D,GAAG,IAAG;AACvB,oBAAIA,GAAG,CAAChC,cAAJ,CAAmB,SAAnB,CAAJ,EAAmC;AACjC,uBAAI,CAACiC,UAAL,CAAgB,SAAhB,IAA6BD,GAAG,CAAC,SAAD,CAAhC;AACD,iBAFD,MAEO;AACL,uBAAI,CAACC,UAAL,CAAgB,UAAhB,IAA8B,KAAKpC,QAAQ,CAACiC,KAAK,EAAjD;AACD;AACF,eAND;AAOD;AACF,WApBD,EAoBIA,KAAD,IAAU;AACX,iBAAI,CAACV,UAAL,GAAkB,KAAlB;AACD,WAtBD;AAuBD;AACF;AA1Ea;AA2Ef;;AAEKc,oBAAkB,CAACC,aAAD,EAAmB;AAAA;;AAAA;AACzC,YAAMC,GAAG,GAAG,iCAAZ;;AACA,UAAI,CAACD,aAAa,CAACE,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,EAA8BzD,IAA9B,CAAmC0D,KAAnC,CAAyCH,GAAzC,CAAL,EAAoD;AAClD,cAAI,CAAC5G,YAAL,CAAkBsG,KAAlB,CAAwB,0BAAxB;;AACA,cAAI,CAACU,mBAAL,GAA2B,IAA3B;AACA,eAAO,KAAP;AACD,OAJD,MAIO;AACL,cAAI,CAACA,mBAAL,GAA2B,IAA3B;AACA,cAAI,CAACA,mBAAL,GAA2BL,aAAa,CAACE,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,CAA3B;;AACA,YAAI,MAAI,CAACE,mBAAT,EAA8B;AAC5B,gBAAMnF,IAAI,GAAG,IAAIoF,QAAJ,EAAb;AAA6BpF,cAAI,CAACqF,MAAL,CAAY,MAAZ,EAAoB,MAAI,CAACF,mBAAzB;AAC7B,gBAAM,MAAI,CAAC9G,aAAL,CAAmBiH,UAAnB,CAA8BtF,IAA9B,EAAoCuF,IAApC,CAA0C/E,GAAD,IAAa;AAAG,kBAAI,CAAC/B,OAAL,CAAa2D,GAAb,CAAiB,gBAAjB,EAAmCoD,QAAnC,CAA4ChF,GAAG,CAACR,IAAhD;AAAwD,WAAjH,CAAN;AACD,SANI,CAOL;;AACD;AAdwC;AAe1C;;AAIKyF,iBAAe,CAACX,aAAD,EAAqBhB,CAArB,EAAsB;AAAA;;AAAA;AACzC,YAAI,CAAC4B,aAAL,GAAqB5B,CAArB;AACA,YAAMiB,GAAG,GAAG,iCAAZ;;AACA,UAAI,CAACD,aAAa,CAACE,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,EAA8BzD,IAA9B,CAAmC0D,KAAnC,CAAyCH,GAAzC,CAAL,EAAoD;AAClD,cAAI,CAAC5G,YAAL,CAAkBsG,KAAlB,CAAwB,0BAAxB;;AACA,cAAI,CAACkB,UAAL;;AACA,eAAO,KAAP;AACD,OAJD,MAIO;AACL,cAAI,CAACA,UAAL;;AACA,cAAI,CAACC,YAAL,GAAoBd,aAAa,CAACE,MAAd,CAAqBC,KAArB,CAA2B,CAA3B,CAApB;;AACA,cAAI,CAACxG,OAAL,CAAamF,QAAb,CAAsB,YAAtB,EAAoC,UAApC,EAAgDE,CAAhD,EAAmDvC,UAAnD,CAA8D;AAAE,WAAC,GAAG,MAAI,CAACwB,mBAAL,CAAyBe,CAAzB,CAA2B,MAA/B,GAAwC,MAAI,CAAC8B,YAAL,CAAkBpE;AAA5D,SAA9D;;AACA,cAAMxB,IAAI,GAAG,IAAIoF,QAAJ,EAAb;AAA6BpF,YAAI,CAACqF,MAAL,CAAY,MAAZ,EAAoB,MAAI,CAACO,YAAzB;AAC7B,cAAM,MAAI,CAACvH,aAAL,CAAmBiH,UAAnB,CAA8BtF,IAA9B,EAAoCuF,IAApC,CAA0C/E,GAAD,IAAa;AAC1D,gBAAI,CAAC/B,OAAL,CAAamF,QAAb,CAAsB,YAAtB,EAAoC,UAApC,EAAgD,MAAI,CAAC8B,aAArD,EAAoEnE,UAApE,CAA+E;AAAE,aAAC,GAAG,MAAI,CAACwB,mBAAL,CAAyB,MAAI,CAAC2C,aAA9B,CAA4C,EAAhD,GAAqDlF,GAAG,CAACR;AAA3D,WAA/E;AACD,SAFK,CAAN,CALK,CAQL;AACA;AACA;AACD;AAlBwC;AAmB1C;;AACD2F,YAAU;AACR,SAAKC,YAAL,GAAoB,IAApB;AACD;;AACDC,aAAW;AACT,SAAK7H,WAAL,CAAiB8H,kBAAjB,CAAoC;AAAEvH,aAAO,EAAE,KAAKE,OAAL,CAAaE,KAAb,CAAmBJ;AAA9B,KAApC,EAA6EwB,SAA7E,CAAwFS,GAAD,IAAQ;AAC7F,UAAIA,GAAG,CAACkE,OAAJ,IAAe,OAAnB,EAA4B;AAC1B,aAAKjG,OAAL,CAAamF,QAAb,CAAsB,SAAtB,EAAiCmC,SAAjC,CAA2C;AAAEC,gBAAM,EAAE;AAAV,SAA3C;AACA,aAAKpB,UAAL,CAAgB,SAAhB,IAA6B,oBAA7B;AACD,OAHD,MAGO;AACL,aAAKnG,OAAL,CAAamF,QAAb,CAAsB,SAAtB,EAAiCmC,SAAjC,CAA2C,IAA3C;AACA,aAAKnB,UAAL,CAAgB,SAAhB,IAA6B,KAA7B;AACD;AACF,KARD;AASD;;AAEDqB,uBAAqB,CAACC,KAAD,EAAW;AAC9B,QAAIC,GAAG,GAAG7C,MAAM,CAAC8C,YAAP,CAAoBF,KAAK,CAACG,OAA1B,CAAV;;AACA,QAAI,SAASC,IAAT,CAAcH,GAAd,CAAJ,EAAwB;AACtB,aAAO,IAAP;AACD,KAFD,MAEO;AACLD,WAAK,CAACK,cAAN;AACA,aAAO,KAAP;AACD;AACF;;AAEDC,aAAW,IAAY;;AAjVQ;;;mBAApB5I,sBAAoBP,gEAAAA,CAAAA,oDAAAA,GAAAA,gEAAAA,CAAAA,wDAAAA,GAAAA,gEAAAA,CAAAA,qEAAAA,GAAAA,gEAAAA,CAAAA,sFAAAA,GAAAA,gEAAAA,CAAAA,qEAAAA,GAAAA,gEAAAA,CAAAA,sDAAAA,GAAAA,gEAAAA,CAAAA,qEAAAA,GAAAA,gEAAAA,CAAAA,yEAAAA,GAAAA,gEAAAA,CAAAA,sDAAAA;AAAA;;;QAApBO;AAAoB6I;AAAAC;AAAAC;AAAAC;AAAA1D;AAAA;;;ACnBjC7F,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyBA,MAAAA,qDAAAA;AAAIA,MAAAA,2DAAAA;AAC/BA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyBA,MAAAA,qDAAAA;AAAeA,MAAAA,2DAAAA;AAC1CA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AAA4BA,MAAAA,yDAAAA;AAAA,eAAYwJ,gBAAZ;AAAwB,OAAxB;AAc1BxJ,MAAAA,yDAAAA;AAuBAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAUA,MAAAA,2DAAAA;AACnDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAUA,MAAAA,6DAAAA;AAAIA,MAAAA,qDAAAA;AAACA,MAAAA,2DAAAA;AAAKA,MAAAA,2DAAAA;AAC7DA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAWA,MAAAA,2DAAAA;AACpDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAA0CA,MAAAA,qDAAAA;AAAMA,MAAAA,6DAAAA;AAAIA,MAAAA,qDAAAA;AAACA,MAAAA,2DAAAA;AAAKA,MAAAA,2DAAAA;AAC1DA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAmDA,MAAAA,yDAAAA;AAAA,eAAUwJ,iBAAV;AAAuB,OAAvB;AAAnDxJ,MAAAA,2DAAAA;AAEFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAKA,MAAAA,6DAAAA;AAAIA,MAAAA,qDAAAA;AAACA,MAAAA,2DAAAA;AAAKA,MAAAA,2DAAAA;AACxDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAMFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAWA,MAAAA,2DAAAA;AACpDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AAEFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAeA,MAAAA,2DAAAA;AACxDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAA0DA,MAAAA,yDAAAA;AAAA,eAAYwJ,iCAAZ;AAAyC,OAAzC;AAA1DxJ,MAAAA,2DAAAA;AAEFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAiBA,MAAAA,2DAAAA;AAC1DA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAA4DA,MAAAA,yDAAAA;AAAA,eAAYwJ,iCAAZ;AAAyC,OAAzC;AAA5DxJ,MAAAA,2DAAAA;AAEFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,sEAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAyCA,MAAAA,qDAAAA;AAAeA,MAAAA,2DAAAA;AACxDA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AAAmDA,MAAAA,yDAAAA;AAAAA,QAAAA,4DAAAA;;AAAA;;AAAA,eAASyJ,WAAT;AAAiC,OAAjC;AACjDzJ,MAAAA,wDAAAA;AACAA,MAAAA,wDAAAA;AACAA,MAAAA,6DAAAA;AAAgEA,MAAAA,yDAAAA;AAAA,eAAUwJ,8BAAV;AAAoC,OAApC;AAAhExJ,MAAAA,2DAAAA;AAEFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAEAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,wDAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AAOFA,MAAAA,oEAAAA;AAiEAA,MAAAA,yDAAAA;AAyDAA,MAAAA,yDAAAA;AAmBAA,MAAAA,6DAAAA;AACEA,MAAAA,6DAAAA;AACEA,MAAAA,qDAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;AACFA,MAAAA,2DAAAA;;;;AAvSgBA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA;AAQmBA,MAAAA,wDAAAA;AAAAA,MAAAA,gEAAAA;AAErBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAcEA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AA2BOA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAQAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAQAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAQAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AASqBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAarBA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AASAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AASAA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAWEA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AASFA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA,8GAAAA,4DAAAA;AA2E6CA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAyD3CA,MAAAA,wDAAAA;AAAAA,MAAAA,yDAAAA;AAqBXA,MAAAA,wDAAAA;AAAAA,MAAAA,iEAAAA;;;;;;ADxRDO,oBAAoB,uDAPhCV,qEAAe,EAOiB,GAApBU,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;AElB0C;;;;;;;ICc3C,0EAAqD;IACnD,4EAAkC;IAAA,qEAAU;IAAA,4DAAQ;IACpD,0EAA0B;IAAA,uDAA0B;IAAA,4DAAM;IAC5D,4DAAM;;;IADsB,0DAA0B;IAA1B,iIAA0B;;;IAEtD,0EAAoD;IAClD,4EAAkC;IAAA,oEAAS;IAAA,4DAAQ;IACnD,0EAA0B;IAAA,uDAAyB;IAAA,4DAAM;IAC3D,4DAAM;;;IADsB,0DAAyB;IAAzB,gIAAyB;;;IAIrD,0EAA0D;IACxD,4EAAkC;IAAA,gEAAK;IAAA,4DAAQ;IAC/C,0EAA0B;IAAC,uDAA+B;IAAA,4DAAM;IAClE,4DAAM;;;IADuB,0DAA+B;IAA/B,gJAA+B;;;IAE5D,0EAAmD;IACjD,4EAAkC;IAAA,gEAAK;IAAA,4DAAQ;IAC/C,0EAA0B;IAAC,uDAAwB;IAAA,4DAAM;IAC3D,4DAAM;;;IADuB,0DAAwB;IAAxB,yIAAwB;;;IDpBpD,gBAAgB,SAAhB,gBAAgB;IAK3B,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJlC,cAAS,GAAG,SAAS;IAKjB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClD,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW,KAAY,CAAC;CACzB;gFAjBY,gBAAgB;8GAAhB,gBAAgB;QCX7B,yEAA4B;QAC1B,yEAAkB;QAChB,yEAA0B;QACxB,yEAAqB;QACnB,4EAAmC;QAAA,kEAAO;QAAA,4DAAS;QACnD,4EAAuF;QAAA,wEAAa;QAAA,4DAAS;QAC/G,4DAAM;QAEN,yEAAwB;QACtB,yEAA+B;QAC7B,qEACqD;QACvD,4DAAM;QACN,0EAAoB;QAClB,2EAAiB;QACf,+GAGM;QACN,+GAGM;QACR,4DAAM;QACN,2EAAsB;QACpB,+GAGM;QACN,+GAGM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,4DAAM;QACR,4DAAM;QAvCR,4DAA4B;;QAKoB,0DAAyB;QAAzB,6IAAyB;QAK1D,0DAAsI;QAAtI,sUAAsI;QAKnI,0DAA4B;QAA5B,4HAA4B;QAI5B,0DAA2B;QAA3B,2HAA2B;QAM3B,0DAAiC;QAAjC,iIAAiC;QAIjC,0DAA0B;QAA1B,0HAA0B;;ADlB/B,gBAAgB;IAP5B,qEAAe,EAAE;GAOL,gBAAgB,CAiB5B;AAjB4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVkB;AACQ;AACA;AAC+B;AACT;AACgB;AACjC;AACM;AACP;AACO;AACT;AACE;AACJ;AACU;;;AAEjE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gEAAgB;QAC3B,IAAI,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,2EAAoB,EAAE;KAC7D;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,+FAAuB;QAClC,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,UAAU,EAAE,gFAAyB,EAAE;KAC1E;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,sFAAoB;QAC/B,IAAI,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,2EAAoB,EAAE;KACpE;CACF;AAmBM,MAAM,aAAa;;0EAAb,aAAa;0GAAb,aAAa;+GAJV;QACZ,qEAAW;KACZ,YAbQ;YACP,0DAAY;YACZ,gEAAmB;YACnB,wDAAW;YACX,uGAAoB;YACpB,sEAAY;YACZ,mEAAqB,CAAC,MAAM,CAAC;YAC7B,4EAAgB;YAChB,oEAAc;YACd,sEAAe;YACf,2EAAY;SACb;mIAIU,aAAa,mBAhBT,gEAAgB,EAAE,+FAAuB,EAAE,sFAAoB,aAE5E,0DAAY;QACZ,gEAAmB;QACnB,wDAAW;QACX,uGAAoB;QACpB,sEAAY,8DAEZ,4EAAgB;QAChB,oEAAc;QACd,sEAAe;QACf,2EAAY","sources":["./src/app/module/profile/change-password/change-password.component.ts","./src/app/module/profile/change-password/change-password.component.html","./src/app/module/profile/edit-profile/edit-profile.component.ts","./src/app/module/profile/edit-profile/edit-profile.component.html","./src/app/module/profile/profile.component.ts","./src/app/module/profile/profile.component.html","./src/app/module/profile/profile.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { PasswordValidation } from 'src/app/shared/common';\r\n// import { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  PageTitle = \"Change Password\"\r\n  hide = true;\r\n  hide1 = true;\r\n  hide2 = true;\r\n  loadingState = true;\r\n  addForm: FormGroup;\r\n  validationMessages: any;\r\n  formErrors = {\r\n    old_password: '',\r\n    new_password: '',\r\n    confirm_password: '',\r\n    apierror: '',\r\n  };\r\n  submitAttempt = false;\r\n  showLoader = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService\r\n  ) {\r\n    this.addForm = fb.group({\r\n      old_password: [null, Validators.compose([Validators.required])],\r\n      new_password: [null, Validators.compose([Validators.required])],\r\n      confirm_password: [null, Validators.compose([Validators.required])]\r\n    }, {\r\n      validator: PasswordValidation.passwordValidation()\r\n    });\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  submitForm(): void {\r\n\r\n    this.submitAttempt = true;\r\n    if (this.addForm.valid) {\r\n      this.showLoader = true;\r\n      const formData = {\r\n        oldPassword: this.addForm.value.old_password,\r\n        newPassword: this.addForm.value.new_password,\r\n      };\r\n      this.userService.updatePassword(formData).subscribe((response) => {\r\n        this.showLoader = false;\r\n        this.submitAttempt = false;\r\n        if (response && response.status == \"Ok\") {\r\n          this.toastr.success(response.message);\r\n          this.formErrors.old_password = null;\r\n          this.router.navigateByUrl('/profile');\r\n        } else {\r\n          this.toastr.error(response.message);\r\n          // response.error.map(obj => {\r\n          //   if (obj.hasOwnProperty('old_password')) {\r\n          //     this.formErrors.old_password = obj.old_password;\r\n          //   }\r\n          //   if (obj.hasOwnProperty('confirm_password')) {\r\n          //     this.formErrors.confirm_password = obj.confirm_password;\r\n          //   }\r\n          //   if (!obj.hasOwnProperty('old_password') && !obj.hasOwnProperty('confirm_password')) {\r\n          //     this.formErrors.apierror = `* ${response.error}`;\r\n          //   }\r\n          // });\r\n        }\r\n      },\r\n        (error) => {\r\n          this.showLoader = false;\r\n          this.submitAttempt = false;\r\n          this.formErrors.apierror = `* Server Error`;\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<div class=\"side_container\">\r\n  <div class=\"card\">\r\n    <div class=\"card_details\">\r\n      <div class=\"d-flex justify-content-between\">\r\n        <h3 class=\"form-hadding\">Change Password</h3>\r\n      </div>\r\n      <div class=\"form_container\">\r\n        <form [formGroup]=\"addForm\" (ngSubmit)=\"submitForm()\">\r\n          <div class=\"form-group paddingLabel required\">\r\n            <div class=\"text_field\">\r\n              <label for=\"old password\">Old Password <em>*</em></label>\r\n              <mat-form-field appearance=\"outline\" class=\"w-100 h-60\">\r\n                <input [formControl]=\"addForm.controls['old_password']\" matInput [type]=\"hide ? 'password' : 'text'\"\r\n                  placeholder=\"Old Password\">\r\n                  <mat-icon matSuffix class=\"eye-icon1\" (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"text_field\">\r\n              <label for=\"new password\"> New Password <em>*</em></label>\r\n              <mat-form-field appearance=\"outline\" class=\"w-100 h-60\">\r\n                <input [formControl]=\"addForm.controls['new_password']\" matInput [type]=\"hide1 ? 'password' : 'text'\"\r\n                  placeholder=\"New Password\">\r\n                  <mat-icon matSuffix class=\"eye-icon2\" (click)=\"hide1 = !hide1\">{{hide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"text_field\">\r\n              <label for=\"Confirm password\"> Confirm Password <em>*</em></label>\r\n              <mat-form-field appearance=\"outline\" class=\"w-100 h-60\">\r\n                <input [formControl]=\"addForm.controls['confirm_password']\" [type]=\"hide2 ? 'password' : 'text'\" matInput\r\n                  placeholder=\"Confirm Password\">\r\n                  <mat-icon matSuffix class=\"eye-icon3\" (click)=\"hide2 = !hide2\">{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"d-flex justify-content-center margin-y buttons\">\r\n              <button type=\"submit\" mat-raised-button class=\"blue-btn\">Save </button>\r\n              <button mat-raised-button [routerLink]=\"['../']\" class=\"blue-line-btn\">Cancel</button>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </div>\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BusinessUnitService } from 'src/app/service/business-unit.service';\r\nimport { CommonService } from 'src/app/service/common.service';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { RoleService } from 'src/app/service/role.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { enableAllFormFields, validateAllFormFields } from 'src/app/shared/common';\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss']\r\n\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n\r\n  loadingState = false;\r\n  addForm: FormGroup;\r\n  showLoader = false;\r\n  formErrors = {\r\n    emailId: null,\r\n    apierror: null,\r\n  };\r\n  attributeArray: FormArray;\r\n  roleListArray: any = [];\r\n  isEditing = false;\r\n  editId = null;\r\n  pageTitle = 'Update Profile';\r\n  buListArray: any = [];\r\n  attributeFieldsName: any = [];\r\n  attributeDisplayFieldsName: any = [];\r\n  attributeList: any = [];\r\n  editObject: any;\r\n  currentUser: any;\r\n  notDynamicAttributeArray: any = [];\r\n  selectedProfileFile: any;\r\n  staticField = ['emailid', 'firstname', 'nativename', 'lastname', 'designation', 'primarycontact', 'profilepicture', 'secondarycontact'];\r\n  dynamicToStaticFields: any = [];\r\n  isProfileEditable: boolean = false;\r\n  isMultipleBU: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private businessUnitService: BusinessUnitService,\r\n    private roleService: RoleService,\r\n    private toastService: ToastrService,\r\n    private dataService: DataService,\r\n    private commonService: CommonService,\r\n    private location: Location\r\n  ) {\r\n    this.addForm = this.fb.group({\r\n      emailId: [{ value: null, disabled: true }, Validators.compose([Validators.email])],\r\n      firstName: [{ value: \"\", disabled: true }],\r\n      lastName: [{ value: null, disabled: true }, Validators.compose([Validators.required])],\r\n      nativeName: [{ value: \"\", disabled: true }],\r\n      roleId: [null],\r\n      password: [\"\"],\r\n      designation: [{ value: null, disabled: true }],\r\n      primaryContact: [{ value: null, disabled: true }, Validators.compose([Validators.minLength(8), Validators.maxLength(20)])],\r\n      profilePicture: [{ value: null, disabled: true }],\r\n      // address: fb.group({\r\n      //   building: [null, Validators.compose([Validators.required])],\r\n      //   street: [null, Validators.compose([Validators.required])],\r\n      //   locality: [null, Validators.compose([Validators.required])],\r\n      //   postalcode: [null, Validators.compose([Validators.required])],\r\n      //   city: [null, Validators.compose([Validators.required])],\r\n      //   state: [null, Validators.compose([Validators.required])],\r\n      //   country: [null, Validators.compose([Validators.required])]\r\n      // }),\r\n      businessUnitIds: [],\r\n      secondaryContact: [{ value: null, disabled: true }, Validators.compose([Validators.minLength(8), Validators.maxLength(20)])],\r\n      attributes: new FormArray([]),\r\n      myBuCode: ['']\r\n    });\r\n\r\n    this.dataService.currentUser.subscribe((data) => {\r\n      if (data) {\r\n        this.currentUser = data;\r\n        this.isEditing = true;\r\n        this.editId = this.currentUser.id;\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() { this.getMasterData(); }\r\n\r\n  getMasterData() {\r\n    let param = {\r\n      \"searchFilter\": null,\r\n      \"page\": 1,\r\n      \"pageSize\": 0,\r\n      \"fields\": null\r\n    };\r\n    this.businessUnitService.getBusinessUnitList(param).subscribe((res) => {\r\n      if (res) {\r\n        this.buListArray = res.data;\r\n        // if (this.buListArray.length > 0) {\r\n        this.getEditObject();\r\n        // }\r\n      }\r\n    });\r\n    if (this.currentUser) {\r\n      let filters = [];\r\n      this.currentUser.roleList.map((type) => { filters.push({ \"propertyName\": \"RoleType\", \"value\": type, \"caseSensitive\": true }) })\r\n      this.roleService.getRoleList({ \"page\": 1, \"pageSize\": 0, \"fields\": null, \"searchFilter\": { \"conditionOperator\": 1, \"filters\": filters } }).subscribe((res) => {\r\n        if (res) { this.roleListArray = res.data; this.setRoleById(); }\r\n      });\r\n    }\r\n  }\r\n  setRoleById() {\r\n    if (this.editObject && this.editObject.roleId)\r\n      for (let index = 0; index < this.roleListArray.length; index++) {\r\n        const element = this.roleListArray[index];\r\n        if (element.id == this.editObject.roleId) { this.addForm.patchValue({ roleId: element.name }); break; } else continue;\r\n      }\r\n  }\r\n\r\n  checkIsEditable() {\r\n    if (this.currentUser.userType == \"End User\") {\r\n      this.staticField.map((field) => {\r\n        if (this.dynamicToStaticFields && this.dynamicToStaticFields.length > 0) {\r\n          this.dynamicToStaticFields.forEach(element => {\r\n            if (field == (String(element.displayName)?.replace(/\\s/g, '').toLowerCase())) {\r\n              if (element.isEditable) {\r\n                switch (field) {\r\n                  case 'firstname': this.addForm.get('firstName').enable(); break;\r\n                  case 'lastname': this.addForm.get('lastName').enable(); break;\r\n                  case 'nativename': this.addForm.get('nativeName').enable(); break;\r\n                  case 'emailid': this.addForm.get('emailId').enable(); break;\r\n                  case 'designation': this.addForm.get('designation').enable(); break;\r\n                  case 'primarycontact': this.addForm.get('primaryContact').enable(); break;\r\n                  case 'secondarycontact': this.addForm.get('secondaryContact').enable(); break;\r\n                  case 'profilepicture': this.addForm.get('profilePicture').enable(); this.isProfileEditable = true; break;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.addForm.get('firstName').enable();\r\n      this.addForm.get('lastName').enable();\r\n      this.addForm.get('nativeName').enable();\r\n      // this.addForm.get('emailId').enable();\r\n      this.addForm.get('designation').enable();\r\n      this.addForm.get('primaryContact').enable();\r\n      this.addForm.get('secondaryContact').enable();\r\n      this.addForm.get('profilePicture').enable();\r\n      this.isProfileEditable = true;\r\n    }\r\n  }\r\n\r\n  getEditObject() {\r\n    this.userService.getUserById({ id: this.editId }).subscribe((response) => {\r\n\r\n      if (response && response.data) {\r\n        this.editObject = response.data;\r\n        this.addForm.patchValue({ ...response.data });\r\n        if (response.data.businessUnitIds && response.data.role != 'BU Admin') {\r\n          if (response.data.hasOwnProperty('businessUnitIds') && response.data.businessUnitIds[0]) {\r\n            this.addForm.patchValue({ businessUnitIds: response.data.businessUnitIds[0] });\r\n          } else {\r\n            // this.addForm.patchValue({ businessUnitIds: [] });\r\n          }\r\n        } else if (response.data.businessUnitIds && response.data.role == 'BU Admin') {\r\n          this.isMultipleBU = true;\r\n          this.addForm.patchValue({ businessUnitIds: response.data.businessUnitIds });\r\n        }\r\n        // response.data.businessUnitIds ? this.addForm.patchValue({ businessUnitIds: response.data.businessUnitIds[0] }) : '';\r\n        this.attributeArray = this.addForm.get('attributes') as FormArray;\r\n        this.attributeArray.clear();\r\n        this.attributeFieldsName = [];\r\n        this.attributeList = [];\r\n        this.setRoleById();\r\n\r\n        if ((response.data && response.data.buSpecificAttributes && this.buListArray.length > 0 && response.data.buSpecificAttributes.length > 0)) {\r\n          this.buListArray[0].template.attributes.map((data) => {\r\n            if (!this.staticField.includes(String(data.displayName)?.replace(/\\s/g, '').toLowerCase())) {\r\n              if (data.isDynamic) {\r\n                this.attributeList.push(data);\r\n                this.attributeFieldsName.push(data.attributeName);\r\n                if (String(data.attributeType).toLowerCase() == 'image') {\r\n                  this.attributeArray.push(this.fb.group({\r\n                    [data.attributeName]: [data.value, Validators.required],\r\n                    [`${data.attributeName}_img`]: [data.value]\r\n                  }));\r\n                } else {\r\n                  this.attributeArray.push(this.fb.group({ [data.attributeName]: [data.value, Validators.required] }));\r\n                }\r\n\r\n              } else {\r\n                this.notDynamicAttributeArray.push(data);\r\n              }\r\n            } else {\r\n              if (data.isDynamic) { this.dynamicToStaticFields.push(data); } else {\r\n                this.notDynamicAttributeArray.push(data);\r\n              }\r\n            }\r\n          })\r\n        }\r\n        this.checkIsEditable();\r\n      } else {\r\n        this.router.navigateByUrl('/my-cards');\r\n      }\r\n    });\r\n  }\r\n\r\n  async submitForm() {\r\n    if (this.addForm.valid) {\r\n      if (this.attributeArray && this.attributeArray.length > 0) {\r\n        this.attributeArray.controls.forEach((control: any, i) => { validateAllFormFields(control) });\r\n      }\r\n      enableAllFormFields(this.addForm)\r\n      this.showLoader = true;\r\n      // if (this.selectedProfileFile) {\r\n      //   const data = new FormData(); data.append('file', this.selectedProfileFile);\r\n      //   await this.commonService.fileUpload(data).then((res: any) => { this.addForm.get('profilePicture').setValue(res.data); })\r\n      // }\r\n      let BuAttributes: any = [];\r\n      if (this.attributeArray && this.attributeArray.length > 0) {\r\n        this.attributeArray.controls.forEach((control: any, i) => { validateAllFormFields(control) });\r\n        this.addForm.value.attributes.map((data, i) => {\r\n          Object.keys(data).forEach((key) => {\r\n            if (!key.includes('_img'))\r\n              BuAttributes.push({ ...this.attributeList[i], \"attributeName\": key, \"value\": data[key], });\r\n          });\r\n        })\r\n      }\r\n      this.dynamicToStaticFields.map((data) => {\r\n        switch (String(data.displayName)?.replace(/\\s/g, '').toLowerCase()) {\r\n          case 'firstname': BuAttributes.push({ ...data, value: this.addForm.value.firstName }); break;\r\n          case 'emailid': BuAttributes.push({ ...data, value: this.addForm.value.emailId }); break;\r\n          case 'lastname': BuAttributes.push({ ...data, value: this.addForm.value.lastName }); break;\r\n          case 'nativename': BuAttributes.push({ ...data, value: this.addForm.value.nativeName }); break;\r\n          case 'designation': BuAttributes.push({ ...data, value: this.addForm.value.designation }); break;\r\n          case 'primarycontact': BuAttributes.push({ ...data, value: this.addForm.value.primaryContact }); break;\r\n          case 'secondarycontact': BuAttributes.push({ ...data, value: this.addForm.value.secondaryContact }); break;\r\n          case 'profilepicture': BuAttributes.push({ ...data, value: this.addForm.value.profilePicture }); break;\r\n        }\r\n      })\r\n\r\n      BuAttributes = [...BuAttributes, ...this.notDynamicAttributeArray];\r\n      let data = { ...this.addForm.value, buSpecificAttributes: BuAttributes };\r\n      // if (this.currentUser.userType == 'BU Admin' || this.currentUser.userType == 'End User') {\r\n      //   if (this.addForm.value.businessUnitIds) { data = { ...data, businessUnitIds: [this.addForm.value.businessUnitIds] } }\r\n      //   else { data = { ...data, businessUnitIds: [] } }\r\n      // }\r\n      if (this.addForm.value.businessUnitIds && this.currentUser?.userType != 'Super Admin') {\r\n        let temp = this.isMultipleBU ? this.addForm.value.businessUnitIds :\r\n          (this.addForm.value.businessUnitIds.length > 0) ? [this.addForm.value.businessUnitIds] : [];\r\n        data = { ...data, businessUnitIds: temp }\r\n      }\r\n      else { data = { ...data, businessUnitIds: [] } }\r\n\r\n      delete data.attributes;\r\n      data['fullName'] = data.firstName + ' ' + data.lastName;\r\n      if (this.isEditing) {\r\n        this.userService.saveUser({ ...data, id: this.editId, isActive: true }).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.status == 'Ok') {\r\n            this.dataService.updateAuth({ ...this.currentUser, ...response.data });\r\n            if (this.currentUser.userType == 'End User') {\r\n              this.router.navigateByUrl('/my-cards');\r\n            } else {\r\n              this.location.back();\r\n            }\r\n\r\n          } else {\r\n            this.toastService.error(response.message);\r\n            response.error.map(obj => {\r\n              if (obj.hasOwnProperty('emailId')) {\r\n                this.formErrors['emailId'] = obj['emailId'];\r\n              } else {\r\n                this.formErrors['apierror'] = `* ${response.error}`;\r\n              }\r\n            });\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async profileChangeEvent(fileInputFile: any) {\r\n    const reg = /(.*?)\\.(jpg|jpeg|png|gif|giff)$/;\r\n    if (!fileInputFile.target.files[0].name.match(reg)) {\r\n      this.toastService.error('Please select valid file');\r\n      this.selectedProfileFile = null;\r\n      return false;\r\n    } else {\r\n      this.selectedProfileFile = null;\r\n      this.selectedProfileFile = fileInputFile.target.files[0];\r\n      if (this.selectedProfileFile) {\r\n        const data = new FormData(); data.append('file', this.selectedProfileFile);\r\n        await this.commonService.fileUpload(data).then((res: any) => { this.addForm.get('profilePicture').setValue(res.data); })\r\n      }\r\n      // this.addForm.get('profilePicture').setValue(this.selectedProfileFile.name);\r\n    }\r\n  }\r\n  // Image fields in attributes Array\r\n  SelectedFile: any;\r\n  selectedIndex: number = 0;\r\n  async fileChangeEvent(fileInputFile: any, i) {\r\n    this.selectedIndex = i;\r\n    const reg = /(.*?)\\.(jpg|jpeg|png|gif|giff)$/;\r\n    if (!fileInputFile.target.files[0].name.match(reg)) {\r\n      this.toastService.error('Please select valid file');\r\n      this.RemoveFile();\r\n      return false;\r\n    } else {\r\n      this.RemoveFile();\r\n      this.SelectedFile = fileInputFile.target.files[0];\r\n      this.addForm.controls['attributes']['controls'][i].patchValue({ [`${this.attributeFieldsName[i]}_img`]: this.SelectedFile.name })\r\n      const data = new FormData(); data.append('file', this.SelectedFile);\r\n      await this.commonService.fileUpload(data).then((res: any) => {\r\n        this.addForm.controls['attributes']['controls'][this.selectedIndex].patchValue({ [`${this.attributeFieldsName[this.selectedIndex]}`]: res.data })\r\n      })\r\n      // var reader = new FileReader();\r\n      // reader.onload = this.HandleReaderLoadedFile.bind(this);\r\n      // reader.readAsBinaryString(this.SelectedFile);\r\n    }\r\n  }\r\n  RemoveFile() {\r\n    this.SelectedFile = null;\r\n  }\r\n  verifyEmail() {\r\n    this.userService.checkLoginIdExists({ emailId: this.addForm.value.emailId }).subscribe((res) => {\r\n      if (res.message == 'Exist') {\r\n        this.addForm.controls['emailId'].setErrors({ isExit: true });\r\n        this.formErrors['emailId'] = 'Email already exit';\r\n      } else {\r\n        this.addForm.controls['emailId'].setErrors(null);\r\n        this.formErrors['emailId'] = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  keyPressAlphaNumerics(event: any) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9+]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void { }\r\n}\r\n","<section class=\"side_container\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"main-page\">\r\n      <div class=\"row 0\">\r\n        <div class=\"col add-brdcmb\">\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\">\r\n                <a routerLink=\"/profile\">Home</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n                {{ pageTitle }}\r\n              </li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <div class=\"main-div padding-x\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <h3 class=\"form-hadding\">{{ pageTitle }}</h3>\r\n        </div>\r\n        <form [formGroup]=\"addForm\" (ngSubmit)=\"submitForm()\" class=\"pt-5 row justify-content-between\">\r\n          <!-- <div *ngIf=\"currentUser?.userType == 'End User'|| currentUser?.userType == 'BU Admin'\"\r\n            class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Business Unit</label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-select disabled [formControl]=\"addForm.controls['businessUnitIds']\">\r\n                  <mat-option *ngFor=\"let item of buListArray\" [value]=\"item.code\">\r\n                    {{ item.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div> -->\r\n          <div *ngIf=\"currentUser?.userType == 'End User'\" class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Business Unit <em>*</em></label>\r\n            <div class=\"\">\r\n              <ng-container *ngIf=\"isMultipleBU; else BUIDTemplate\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <mat-select disabled multiple [formControl]=\"addForm.controls['businessUnitIds']\">\r\n                    <mat-option *ngFor=\"let item of buListArray\" [value]=\"item.code\">\r\n                      {{ item.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </ng-container>\r\n              <ng-template #BUIDTemplate>\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <mat-select disabled [formControl]=\"addForm.controls['businessUnitIds']\">\r\n                    <mat-option *ngFor=\"let item of buListArray\" [value]=\"item.code\">\r\n                      {{ item.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">First Name</label>\r\n            <div class=\"inpu-t\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['firstName']\" matInput placeholder=\"Ex : Jack\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Last Name <em>*</em></label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['lastName']\" type=\"text\" matInput placeholder=\"Ex : Rider\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Native Name</label>\r\n            <div class=\"inpu-t\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['nativeName']\" matInput placeholder=\"Ex : Jack\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\"> Email <em>*</em></label>\r\n            <div class=\"disabled\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['emailId']\" (change)=\"verifyEmail()\" type=\"email\" matInput\r\n                  placeholder=\"Ex : abc@gmail.com\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Role <em>*</em></label>\r\n            <div class=\"disabled1\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input type=\"text\" disabled [value]=\"currentUser?.userType\" matInput />\r\n                <!-- <mat-select disabled [formControl]=\"addForm.controls['roleId']\">\r\n                  <mat-option *ngFor=\"let item of roleListArray\" [value]=\"item?.name\">\r\n                    {{ item?.name }}\r\n                  </mat-option>\r\n                </mat-select> -->\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Designation</label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['designation']\" type=\"text\" matInput\r\n                  placeholder=\"Ex : Engineer\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Primary Contact</label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['primaryContact']\" (keypress)=\"keyPressAlphaNumerics($event)\"\r\n                  matInput placeholder=\"Ex : 098645322\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Secondary Contact</label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['secondaryContact']\" (keypress)=\"keyPressAlphaNumerics($event)\"\r\n                  matInput placeholder=\"Ex : 098645322\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <ng-container>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Profile Picture</label>\r\n              <div class=\"imageoverlap\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\" (click)=\"fileInputProfile.click()\">\r\n                  <input [formControl]=\"addForm.controls['profilePicture']\" matInput readonly placeholder=\"Upload\" />\r\n                  <img class=\"upload-icon\" src=\"assets/images/Upload.svg\" />\r\n                  <input hidden #fileInputProfile accept=\"image/x-png,image/jpeg\" (change)=\"profileChangeEvent($event)\"\r\n                    type=\"file\" file-model=\"myFile\" />\r\n                </mat-form-field>\r\n              </div>\r\n              <!-- <label for=\"lname\" class=\"control-label\">Preview</label> -->\r\n              <div class=\"form-group w-45 input-fildcl flex_control\">\r\n                <div class=\"profile_img\">\r\n                  <img [src]=\"addForm.controls['profilePicture']?.value\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"form-group w-45 input-fildcl flex_control\">\r\n\r\n              <div class=\"profile_img\">\r\n                <img [src]=\"addForm.controls['profilePicture']?.value\" />\r\n              </div>\r\n            </div> -->\r\n          </ng-container>\r\n          <!-- <ng-container class=\"form-group\" formGroupName=\"address\">\r\n            <div class=\"division\">\r\n              <span>Address</span>\r\n              <hr>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Street</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"street\" placeholder=\"Ex : Street\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Building</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"building\" placeholder=\"Ex : Building\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Locality</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"locality\" placeholder=\"Ex : Locality\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Postalcode</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input number matInput formControlName=\"postalcode\" placeholder=\"Ex : Postalcode\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">City</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"city\" placeholder=\"Ex : City\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">State</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"state\" placeholder=\"Ex : State\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Country</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"country\" placeholder=\"Ex : country\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n          </ng-container> -->\r\n\r\n          <!-- Dynamic BU fields -->\r\n          <ng-container formArray=\"attributeArray\" *ngFor=\"let item of attributeArray?.controls; let i = index\">\r\n            <div class=\"division\">\r\n              <span>Dynamic BU fields</span>\r\n              <hr>\r\n            </div>\r\n            <div [formGroup]=\"item\" class=\"form-group w-45\">\r\n              <ng-container *ngIf=\"attributeList[i]?.attributeType?.toLowerCase() == 'image'\r\n                  else elseTemplate\r\n                \">\r\n                <div class=\"input-fildcl\">\r\n                  <label for=\"lname\" class=\"control-label\">{{\r\n                    attributeFieldsName[i].replace('{','')?.replace('}','')\r\n                    }}</label>\r\n                  <div class=\"\">\r\n                    <ng-container *ngIf=\"attributeList[i]?.isEditable; else notEditTemplate\">\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\" (click)=\"fileInput.click()\">\r\n                        <input [formControl]=\"\r\n                            item['controls'][attributeFieldsName[i] + '_img']\r\n                          \" matInput readonly\r\n                          placeholder=\"Upload {{ attributeFieldsName[i].replace('{','')?.replace('}','') }}\" />\r\n                        <img class=\"upload-icon\" src=\"assets/images/Upload.svg\" />\r\n                        <input hidden #fileInput accept=\"image/x-png,image/jpeg\" (change)=\"fileChangeEvent($event, i)\"\r\n                          type=\"file\" file-model=\"myFile\" />\r\n                      </mat-form-field>\r\n                    </ng-container>\r\n                    <ng-template #notEditTemplate>\r\n                      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <input [formControl]=\"\r\n                            item['controls'][attributeFieldsName[i] + '_img']\r\n                          \" matInput readonly\r\n                          placeholder=\"Upload {{ attributeFieldsName[i].replace('{','')?.replace('}','') }}\" />\r\n                        <img class=\"upload-icon\" src=\"assets/images/Upload.svg\" />\r\n                      </mat-form-field>\r\n                    </ng-template>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n\r\n              <ng-template #elseTemplate>\r\n                <div class=\"input-fildcl\">\r\n                  <label for=\"lname\" class=\"control-label\">{{\r\n                    attributeFieldsName[i].replace('{','')?.replace('}','')\r\n                    }}</label>\r\n                  <div class=\"\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                      <input [readonly]=\"!attributeList[i]?.isEditable\"\r\n                        [formControl]=\"item['controls'][attributeFieldsName[i]]\" type=\"text\" matInput\r\n                        [placeholder]=\"attributeFieldsName[i].replace('{','')?.replace('}','')\" />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n\r\n            </div>\r\n          </ng-container>\r\n\r\n          <!-- activeBUCode -->\r\n          <ng-container *ngIf=\"currentUser?.userType == 'Tenant Admin' || currentUser?.userType == 'BU Admin'\">\r\n            <div class=\"division\">\r\n              <span>My Business Unit </span>\r\n              <hr>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Business Unit </label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <mat-select [formControl]=\"addForm.controls['myBuCode']\">\r\n                    <mat-option *ngFor=\"let item of buListArray\" [value]=\"item.code\">\r\n                      {{ item.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n          </ng-container>\r\n          <div class=\"d-flex justify-content-end margin-y\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\">\r\n              {{ pageTitle }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- <fullscreen-loading *ngIf=\"showLoader\"></fullscreen-loading> -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { DataService } from 'src/app/service/data.service';\r\n\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  PageTitle = \"Profile\"\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private dataservice: DataService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataservice.currentUser.subscribe((responce) => {\r\n      if (responce) {\r\n        this.currentUser = responce;\r\n      }\r\n    });\r\n  }\r\n  ngOnDestroy(): void {  }\r\n}\r\n","<div class=\"side_container\">\r\n  <div class=\"card\">\r\n    <div class=\"card_details\">\r\n      <div class=\"buttons\">\r\n        <button mat-button class=\"profile\">Profile</button>\r\n        <button type=\"submit\" mat-raised-button [routerLink]=\"['./edit']\" class=\"edit-profile\">Edit Profile </button>\r\n      </div>\r\n\r\n      <div class=\"row imaged\">\r\n        <div class=\"col-2 text-center\">\r\n          <img [src]=\"currentUser?.profilePicture ? currentUser?.profilePicture : 'https://ebcstorage2022.blob.core.windows.net/ebc/DefaultUser.png'\"\r\n            class=\"rounded-circle border\" alt=\"\" width=\"150px\">\r\n        </div>\r\n        <div class=\"col-10\">\r\n          <div class=\"row\">\r\n            <div *ngIf=\"currentUser?.firstName\" class=\"col-md-6\">\r\n              <label class=\"control-label mb-1\">First Name</label>\r\n              <div class=\"bg-light p-2\">{{currentUser?.firstName}}</div>\r\n            </div>\r\n            <div *ngIf=\"currentUser?.lastName\" class=\"col-md-6\">\r\n              <label class=\"control-label mb-1\">Last Name</label>\r\n              <div class=\"bg-light p-2\">{{currentUser?.lastName}}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row mt-4\">\r\n            <div *ngIf=\"currentUser?.primaryContact\" class=\"col-md-6\">\r\n              <label class=\"control-label mb-1\">Phone</label>\r\n              <div class=\"bg-light p-2\"> {{currentUser?.primaryContact}}</div>\r\n            </div>\r\n            <div *ngIf=\"currentUser?.emailId\" class=\"col-md-6\">\r\n              <label class=\"control-label mb-1\">Email</label>\r\n              <div class=\"bg-light p-2\"> {{currentUser?.emailId}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { MaterialExModule } from 'src/app/shared/material.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { permission } from 'src/app/shared/permission';\r\nimport { LoaderModule } from 'src/app/core/loader/loader.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProfileComponent,\r\n    data: { title: 'Profile', permission: permission.myProfile }\r\n  },\r\n  {\r\n    path: 'change-password',\r\n    component: ChangePasswordComponent,\r\n    data: { title: 'Change Password', permission: permission.changePassword }\r\n  },\r\n  {\r\n    path: 'edit',\r\n    component: EditProfileComponent,\r\n    data: { title: 'Update Profile', permission: permission.myProfile }\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [ProfileComponent, ChangePasswordComponent, EditProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FormValidationModule,\r\n    SharedModule,\r\n    RouterModule.forChild(routes),\r\n    MaterialExModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    LoaderModule\r\n  ], providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n"],"names":["Validators","FormArray","AutoUnsubscribe","enableAllFormFields","validateAllFormFields","i0","_r5","_r19","ctx_r22","_r17","item_r11","_r14","EditProfileComponent","constructor","router","fb","userService","businessUnitService","roleService","toastService","dataService","commonService","location","emailId","apierror","addForm","group","value","disabled","compose","email","firstName","lastName","required","nativeName","roleId","password","designation","primaryContact","minLength","maxLength","profilePicture","businessUnitIds","secondaryContact","attributes","myBuCode","currentUser","subscribe","data","isEditing","editId","id","ngOnInit","getMasterData","param","getBusinessUnitList","res","buListArray","getEditObject","filters","roleList","map","type","push","getRoleList","roleListArray","setRoleById","editObject","index","length","element","patchValue","name","checkIsEditable","userType","staticField","field","dynamicToStaticFields","forEach","displayName","_a","replace","toLowerCase","isEditable","get","enable","isProfileEditable","getUserById","response","Object","role","hasOwnProperty","isMultipleBU","attributeArray","clear","attributeFieldsName","attributeList","buSpecificAttributes","template","includes","isDynamic","attributeName","String","attributeType","notDynamicAttributeArray","navigateByUrl","submitForm","valid","controls","control","i","showLoader","BuAttributes","keys","key","temp","saveUser","isActive","status","updateAuth","back","error","message","obj","formErrors","profileChangeEvent","fileInputFile","reg","target","files","match","selectedProfileFile","FormData","append","fileUpload","then","setValue","fileChangeEvent","selectedIndex","RemoveFile","SelectedFile","verifyEmail","checkLoginIdExists","setErrors","isExit","keyPressAlphaNumerics","event","inp","fromCharCode","keyCode","test","preventDefault","ngOnDestroy","selectors","decls","vars","consts","ctx","_r1"],"sourceRoot":"webpack:///"}