{"version":3,"file":"src_app_auth_login_login_module_ts.js","mappings":"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","sources":["./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { validateEmailFormControl, CommonFunction } from 'src/app/shared/common';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { TenantService } from 'src/app/service/tenant.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ChangePasswordComponentPopup } from 'src/app/core/change-password-popup/change-password-popup.component';\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  formErrors = {\r\n    apierror: null\r\n  };\r\n  showLoader = false;\r\n  isAuthenticated: boolean;\r\n  isCompanySelected: boolean;\r\n  loginType = 'email'\r\n  captchaValue: string = '';\r\n  isAdmin: boolean = false;\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private fBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private dataService: DataService,\r\n    private tenantService: TenantService,\r\n    public dialog: MatDialog,\r\n  ) {\r\n    this.loginForm = this.fBuilder.group({\r\n      emailId: [null, Validators.compose([Validators.required, validateEmailFormControl])],\r\n      password: [null, Validators.compose([Validators.required])],\r\n      tenantCode: [null, Validators.compose([Validators.required])],\r\n      // captcha: new FormControl({value:'',disabled:true}),\r\n      captcha: [null, Validators.compose([Validators.required])],\r\n      reCaptcha: ['']\r\n    });\r\n    if (this.activatedRoute.snapshot.queryParams && this.activatedRoute.snapshot.queryParams['isAdmin']) {\r\n      this.isAdmin = this.activatedRoute.snapshot.queryParams['isAdmin'];\r\n      this.loginForm.patchValue({ tenantCode: 'EBC' })\r\n    } else {\r\n      this.isAdmin = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createCaptcha();\r\n  }\r\n  changeLoginType(type) {\r\n    this.loginType = type;\r\n  }\r\n  getLoginType(type) {\r\n    this.loginType = type;\r\n  }\r\n  submitForm(): void {\r\n    if (this.formErrors.apierror) {\r\n      if (this.loginForm.controls['captcha'].value !== this.loginForm.controls['reCaptcha'].value) {\r\n        this.createCaptcha();\r\n        this.toastr.error('Please enter a valid captcha!!');\r\n        return;\r\n      }\r\n    }\r\n    if (this.loginForm.valid) {\r\n      this.showLoader = true;\r\n      const formData = {\r\n        emailId: this.loginForm.value.emailId,\r\n        password: this.loginForm.value.password,\r\n        tenantCode: this.loginForm.value.tenantCode,\r\n      };\r\n      this.authService.login(formData).subscribe((response) => {\r\n        this.showLoader = false;\r\n        if (response) {\r\n          if (response.permissions && response.permissions.length) {\r\n            this.dataService.setAuth(response);\r\n            response.tenantCode ? this.getTenantDetails(response.tenantCode) : '';\r\n            setTimeout(() => { CommonFunction.resetForm(this.loginForm); }, 5000);\r\n            // if (response.user.hasOwnProperty('lastName') && response.user.hasOwnProperty('designation')) {\r\n            this.activatedRoute.snapshot.queryParamMap.get('next');\r\n            const nextURL = this.activatedRoute.snapshot.queryParamMap.get('next') ?\r\n              this.activatedRoute.snapshot.queryParamMap.get('next') : '/dashboard';\r\n            response.userType == 'End User' ? this.router.navigateByUrl('/my-cards') : this.router.navigateByUrl(nextURL);\r\n            // } else {\r\n            //   this.router.navigateByUrl('/profile/edit');\r\n            // }\r\n\r\n            if (response.user.isFirstTimeLogin) {\r\n              const dialogRef = this.dialog.open(ChangePasswordComponentPopup, {\r\n                disableClose: true,\r\n                // width: '683px',\r\n                // height: '554px',\r\n                data: response,\r\n                panelClass: 'delete-popup'\r\n\r\n              });\r\n\r\n              dialogRef.afterClosed().subscribe(result => {\r\n                if (result && result.is_delete) {\r\n                  // this.roleService.deleteRole(result.id).subscribe((res) => {\r\n                  //   this.getObjects();\r\n                  // })\r\n                }\r\n              });\r\n            }\r\n          } else {\r\n            this.toastr.warning('please contact to administration.', 'Permission Denied');\r\n          }\r\n        } else {\r\n          this.formErrors.apierror = `* ${response.error[0]}`;\r\n        }\r\n      }, (error) => {\r\n        this.createCaptcha();\r\n        this.toastr.error(error.error.message);\r\n        this.formErrors.apierror = error.error.message;\r\n        this.showLoader = false;\r\n        this.loginForm.get('reCaptcha').setValidators(Validators.compose([Validators.required]));\r\n        this.loginForm.get('reCaptcha').updateValueAndValidity();\r\n      });\r\n    }\r\n  }\r\n\r\n  removeError() {\r\n    this.formErrors.apierror = null;\r\n  }\r\n\r\n  createCaptcha() {\r\n    let result = '';\r\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let charactersLength = characters.length;\r\n    for (let i = 0; i < 6; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() *\r\n        charactersLength));\r\n    }\r\n    this.captchaValue = result;\r\n    this.loginForm.controls['captcha'].setValue(result);\r\n    this.loginForm.controls['reCaptcha'].setValue('');\r\n  }\r\n\r\n  getTenantDetails(tenantCode): void {\r\n    this.tenantService.getTenantByCodeEndUser({\r\n      \"code\": tenantCode\r\n    }).subscribe((res) => {\r\n      if (res && res.data)\r\n        this.dataService.currentTenantSubject.next(res);\r\n\r\n    })\r\n\r\n    // this.tenantService.getTenantList({\r\n    //   \"page\": 1, \"pageSize\": 10, \"fields\": null,\r\n    //   \"searchFilter\": {\r\n    //     \"conditionOperator\": 1,\r\n    //     \"filters\": [{ \"propertyName\": \"Code\", \"value\": tenantCode, \"caseSensitive\": true }]\r\n    //   }\r\n    // }).subscribe((res) => {\r\n    //   if (res && res.data && res.data.length > 0)\r\n    //     this.dataService.currentTenantSubject.next(res.data[0]);\r\n    // })\r\n  }\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\">\r\n  <div class=\"main_container\">\r\n    <div class=\"container\">\r\n      <div class=\"row main_row\">\r\n        <div class=\"col-lg-6 col-md-12\">\r\n          <div class=\"form_container\">\r\n            <div class=\"header\">\r\n              <div class=\"logo\">\r\n                <img src=\"assets/images/logo.svg\" class=\"img-fluid\" />\r\n              </div>\r\n              <div class=\"heading\">\r\n                <h1 class=\"title\"> {{'LOGIN.TITLE'|translate}} </h1>\r\n              </div>\r\n            </div>\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"submitForm()\">\r\n              <div class=\" form-group paddingLabel required\">\r\n                <div *ngIf=\"!isAdmin\" class=\"text_field\">\r\n                  <label for=\"password\">{{'LOGIN.TALENTCODE'|translate}} </label>\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100 h-60\">\r\n                    <input autocomplete=\"new-password\" type=\"text\" [formControl]=\"loginForm.controls['tenantCode']\"\r\n                      matInput>\r\n                    <!-- placeholder=\"{{'LOGIN.CODEPLACEHOLDER'|translate}}\" -->\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"text_field\">\r\n                  <label for=\"email_id\">{{'LOGIN.EMAIL'|translate}}</label>\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100 h-60\">\r\n                    <input autocomplete=\"new-password\" type=\"email\" [formControl]=\"loginForm.controls['emailId']\"\r\n                      matInput placeholder=\"{{'LOGIN.EMAILPLACEHOLDER'|translate}}\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"text_field\">\r\n                  <label for=\"password\">{{'LOGIN.PASSWORD'|translate}}</label>\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100 h-60\">\r\n                    <input autocomplete=\"new-password\" type=\"password\" [formControl]=\"loginForm.controls['password']\"\r\n                      matInput placeholder=\"{{'LOGIN.PASSWORDPLACEHOLDER'|translate}}\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"remember_me\">\r\n                  <div class=\"form-group\">\r\n                    <div class=\"form-check form-check-inline mr-0\">\r\n                      <!-- <label class=\"container rememberLabel\">{{'LOGIN.REMEMBERME'|translate}}\r\n                        <input type=\"checkbox\" checked=\"checked\">\r\n                        <span class=\"checkmark\"></span>\r\n                      </label> -->\r\n                    </div>\r\n                    <a routerLink=\"/forgot-password\" class=\"forgot_password\">{{'LOGIN.FORGOTPASSWORD'|translate}}</a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"text_field captcha_style\" *ngIf=\"formErrors?.apierror\">\r\n                  <label for=\"Captcha\">{{'LOGIN.CAPTCHA'|translate}}</label>\r\n                </div>\r\n                <ng-container *ngIf=\"formErrors?.apierror\">\r\n                  <div class=\"text_field\">\r\n                    <span class=\"captcha\">{{loginForm.controls['captcha']?.value}}</span>\r\n                    <span class=\"captchabutton m-3\" (click)=\"createCaptcha()\">\r\n                      <mat-icon>cached</mat-icon>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"text_field\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100 h-60\">\r\n                      <input type=\"Captcha\" [formControl]=\"loginForm.controls['reCaptcha']\" matInput\r\n                        placeholder=\"{{'LOGIN.CAPTCHAPLACEHOLDER'|translate}}\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                </ng-container>\r\n                <div class=\"button_submit\">\r\n                  <button type=\"submit\" class=\"loginbutton\" [disabled]=\"showLoader\">\r\n                    {{'LOGIN.LOG_IN'|translate}}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-6 col-md-12\">\r\n          <div class=\"right_bg\">\r\n            <img src=\"assets/images/login/authmodule_login_charimage.svg\" class=\"img-fluid img1\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { I18nModule } from 'src/app/shared/i18n/i18n.module';\r\nimport { MaterialExModule } from 'src/app/shared/material.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n    data: { title: 'login' }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    SharedModule,\r\n    MaterialExModule,\r\n    I18nModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  providers: [\r\n    AuthService\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}