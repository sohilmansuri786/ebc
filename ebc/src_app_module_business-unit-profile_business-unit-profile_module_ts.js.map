{"version":3,"file":"src_app_module_business-unit-profile_business-unit-profile_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACqBgBE,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAF2CA,IAAAA,wDAAAA;AACzCA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAuBJA,IAAAA,4DAAAA;AAAoCA,IAAAA,oDAAAA;AAAoBA,IAAAA,0DAAAA;;;;;AAApBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;;;AAUhCA,IAAAA,4DAAAA;AACEA,IAAAA,oDAAAA;AACFA,IAAAA,0DAAAA;;;;;AAFqDA,IAAAA,wDAAAA;AACnDA,IAAAA,uDAAAA;AAAAA,IAAAA,gEAAAA;;;;;;AAINA,IAAAA,4DAAAA;AAAyCA,IAAAA,oDAAAA;AAAyBA,IAAAA,0DAAAA;;;;;AAAzBA,IAAAA,uDAAAA;AAAAA,IAAAA,+DAAAA;;;;ID/C1CC,gCAAgC,SAAhCA,gCAAgC;AAa3CC,cACUC,QADV,EAEUC,aAFV,EAGUC,EAHV,EAIUC,mBAJV,EAKUC,WALV,EAMUC,aANV,EAOUC,cAPV,EAOwC;AAN9B;AACA;AACA;AACA;AACA;AACA;AACA;AAlBV,wBAAe,KAAf;AAEA,sBAAa,KAAb;AACA,sBAAa;AAAEC,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE,IAAzB;AAA+BC,cAAQ,EAAE;AAAzC,KAAb;AACA,qBAAY,IAAZ;AAEA,4BAAwB,EAAxB;AACA,uBAAmB,EAAnB;AACA,wBAAoB,EAApB;AAYE,SAAKC,OAAL,GAAe,KAAKR,EAAL,CAAQS,KAAR,CAAc;AAC3BC,UAAI,EAAE,CAAC,IAAD,EAAOjB,8DAAA,CAAmB,CAACA,+DAAD,CAAnB,CAAP,CADqB;AAE3BY,UAAI,EAAE,CAAC,IAAD,EAAOZ,8DAAA,CAAmB,CAACA,+DAAD,CAAnB,CAAP,CAFqB;AAG3Ba,eAAS,EAAE,CAAC,IAAD,EAAOb,8DAAA,CAAmB,CAACA,+DAAD,CAAnB,CAAP,CAHgB;AAI3BoB,iBAAW,EAAE,CAAC,EAAD,CAJc;AAK3BC,sBAAgB,EAAE,CAAC,IAAD;AALS,KAAd,CAAf;AAQA,SAAKZ,WAAL,CAAiBa,WAAjB,CAA6BC,SAA7B,CAAwCC,IAAD,IAAS;AAC9C,UAAIA,IAAJ,EAAU;AACR,aAAKF,WAAL,GAAmBE,IAAnB;AACA,aAAKC,SAAL;AACD;AAEF,KAND;AAOD;;AAEDC,UAAQ;AACN,SAAKC,cAAL;AACD;;AAEDF,WAAS;AACP,QAAIG,OAAO,GAAG,EAAd;AACA,SAAKN,WAAL,CAAiBO,eAAjB,CAAiCC,GAAjC,CAAsCC,IAAD,IAAS;AAC5CH,aAAO,CAACI,IAAR,CAAa;AAAE,wBAAgB,MAAlB;AAA0B,iBAASD,IAAnC;AAAyC,yBAAiB;AAA1D,OAAb;AACD,KAFD;AAGA,QAAIE,cAAc,GAAG;AAAE,2BAAqB,CAAvB;AAA0B,iBAAWL;AAArC,KAArB;AACA,SAAKpB,mBAAL,CAAyB0B,mBAAzB,CAA6C;AAC3C,sBAAgBD,cAD2B;AAE3C,cAAQ,CAFmC;AAG3C,kBAAY,CAH+B;AAI3C,gBAAU;AAJiC,KAA7C,EAKGV,SALH,CAKcY,GAAD,IAAQ;AAEnB,UAAIA,GAAJ,EAAS;AACP,aAAKC,WAAL,GAAmBD,GAAG,CAACJ,IAAvB;;AACA,YAAI,KAAKK,WAAL,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,eAAKC,YAAL,GAAoB,KAAKF,WAAL,CAAiB,CAAjB,EAAoBG,EAAxC;AACA,eAAKC,UAAL,GAAkB,KAAKJ,WAAL,CAAiB,CAAjB,CAAlB;AACA,eAAKK,UAAL;AAED;AACF;AACF,KAhBD;AAiBD;;AAEDd,gBAAc;AACZ,UAAMe,MAAM,GAAQ;AAClBC,YAAM,EAAE,IADU;AAElBC,UAAI,EAAE,CAFY;AAGlBC,cAAQ,EAAE;AAHQ,KAApB;AAMA,SAAKlC,cAAL,CAAoBgB,cAApB,CAAmCe,MAAnC,EAA2CnB,SAA3C,CAAsDuB,QAAD,IAAa;AAChE,WAAKC,YAAL,GAAoB,KAApB;;AACA,UAAID,QAAQ,CAACf,IAAb,EAAmB;AACjB,aAAKiB,gBAAL,GAAwBF,QAAQ,CAACf,IAAjC;AACD;AACF,KALD;AAOD;;AAEDkB,iBAAe;AACb,QAAI,KAAKlC,OAAL,CAAamC,KAAb,CAAmB,WAAnB,KAAoC,KAAKnC,OAAL,CAAamC,KAAb,CAAmB,WAAnB,EAAgCb,MAAhC,GAAyC,CAAjF,EAAqF;AACnF,WAAKtB,OAAL,CAAaoC,QAAb,CAAsB,WAAtB,EAAmCC,SAAnC,CAA6C;AAAEC,aAAK,EAAE;AAAT,OAA7C;AACA,WAAKC,UAAL,CAAgB,WAAhB,IAA+B,+BAA/B;AACD,KAHD,MAGO;AACL,WAAKvC,OAAL,CAAaoC,QAAb,CAAsB,WAAtB,EAAmCI,aAAnC,CAAiD,CAACvD,+DAAD,CAAjD;AACA,WAAKsD,UAAL,CAAgB,WAAhB,IAA+B,KAA/B;AACD;;AACD,SAAKvC,OAAL,CAAayC,GAAb,CAAiB,WAAjB,EAA8BC,sBAA9B;AACD;;AAEDC,kBAAgB;AACd,SAAKlD,mBAAL,CAAyBmD,eAAzB,CAAyC,KAAK5C,OAAL,CAAamC,KAAb,CAAmBtC,IAA5D,EAAkEW,SAAlE,CAA6EY,GAAD,IAAQ;AAClF,UAAIA,GAAG,CAACyB,OAAJ,IAAe,OAAnB,EAA4B;AAC1B,aAAK7C,OAAL,CAAaoC,QAAb,CAAsB,MAAtB,EAA8BC,SAA9B,CAAwC;AAAES,gBAAM,EAAE;AAAV,SAAxC;AACA,aAAKP,UAAL,CAAgB,MAAhB,IAA0B,iCAA1B;AACD,OAHD,MAGO;AACL,aAAKvC,OAAL,CAAaoC,QAAb,CAAsB,MAAtB,EAA8BC,SAA9B,CAAwC,IAAxC;AACA,aAAKE,UAAL,CAAgB,MAAhB,IAA0B,KAA1B;AACD;AACF,KARD;AASD;;AAEKQ,YAAU;AAAA;;AAAA;AACd,UAAI,CAAC,KAAI,CAACxB,YAAV,EAAwB;AACtB,aAAI,CAAChC,aAAL,CAAmByD,KAAnB,CAAyB,6BAAzB;;AACA;AACD;;AACD,UAAI,KAAI,CAAChD,OAAL,CAAaiD,KAAjB,EAAwB;AACtB,aAAI,CAACC,UAAL,GAAkB,IAAlB;;AACA,YAAI,KAAI,CAACC,SAAT,EAAoB;AAClB,eAAI,CAAC1D,mBAAL,CAAyB2D,gBAAzB,CAAyCC,gCAAM,KAAI,CAACrD,OAAL,CAAamC,KAAnB,GAAwB;AAAEX,cAAE,EAAE,KAAI,CAACC,UAAL,CAAgBD;AAAtB,WAAxB,CAAzC,EAA6FhB,SAA7F,CAAwGuB,QAAD,IAAa;AAClH,iBAAI,CAACmB,UAAL,GAAkB,KAAlB;;AACA,gBAAInB,QAAJ,EAAc;AACZ,mBAAI,CAACzC,QAAL,CAAcgE,IAAd;AACD,aAFD,MAEO,CAAG;AACX,WALD,EAKIN,KAAD,IAAU;AACX,iBAAI,CAACE,UAAL,GAAkB,KAAlB;AACD,WAPD;AAQD,SATD,MASO;AACL,eAAI,CAACA,UAAL,GAAkB,KAAlB;AACD;AACF;AAnBa;AAoBf;;AACDxB,YAAU;AACR6B,WAAO,CAACC,GAAR,CAAY,KAAKjC,YAAjB;AACA,SAAKF,WAAL,CAAiBN,GAAjB,CAAsBC,IAAD,IAAS;AAC5B,UAAI,KAAKO,YAAL,IAAqBP,IAAI,CAACQ,EAA9B,EAAkC;AAChC,aAAKC,UAAL,GAAkBT,IAAlB;AACA,aAAKhB,OAAL,CAAayD,UAAb,CAAwB,KAAKhC,UAA7B;AACD;AACF,KALD;AAMD;;AACDiC,aAAW,IAAY;;AAzIoB;;;mBAAhCtE,kCAAgCD,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,sDAAAA,GAAAA,+DAAAA,CAAAA,uDAAAA,GAAAA,+DAAAA,CAAAA,sFAAAA,GAAAA,+DAAAA,CAAAA,qEAAAA,GAAAA,+DAAAA,CAAAA,yEAAAA,GAAAA,+DAAAA,CAAAA,2EAAAA;AAAA;;;QAAhCC;AAAgCuE;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;AChB7C5E,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAA4BA,MAAAA,4DAAAA;AAA2BA,MAAAA,oDAAAA;AAAIA,MAAAA,0DAAAA;AAAIA,MAAAA,0DAAAA;AAC/DA,MAAAA,4DAAAA;AAAmFA,MAAAA,oDAAAA;AAAaA,MAAAA,0DAAAA;AAChGA,MAAAA,4DAAAA;AAAwDA,MAAAA,oDAAAA;AAAiCA,MAAAA,0DAAAA;AAC3FA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAyBA,MAAAA,oDAAAA;AAA4CA,MAAAA,0DAAAA;AACvEA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAyCA,MAAAA,oDAAAA;AAAcA,MAAAA,4DAAAA;AAAIA,MAAAA,oDAAAA;AAACA,MAAAA,0DAAAA;AAAKA,MAAAA,0DAAAA;AACjEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAYA,MAAAA,wDAAAA;AAAA;AAAA,SAA0B,iBAA1B,EAA0B;AAAA,eACjB6E,gBADiB;AACL,OADrB;AAEV7E,MAAAA,wDAAAA;AAGFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AAA4BA,MAAAA,wDAAAA;AAAA,eAAY6E,gBAAZ;AAAwB,OAAxB;AAE1B7E,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAyCA,MAAAA,oDAAAA;AAAmBA,MAAAA,4DAAAA;AAAIA,MAAAA,oDAAAA;AAACA,MAAAA,0DAAAA;AAAKA,MAAAA,0DAAAA;AACtEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,uDAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAyCA,MAAAA,oDAAAA;AAAmBA,MAAAA,4DAAAA;AAAIA,MAAAA,oDAAAA;AAACA,MAAAA,0DAAAA;AAAKA,MAAAA,0DAAAA;AACtEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAA8BA,MAAAA,wDAAAA;AAAA,eAAS6E,sBAAT;AAA2B,OAA3B;AAA9B7E,MAAAA,0DAAAA;AAEFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAEAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAyCA,MAAAA,oDAAAA;AAAQA,MAAAA,4DAAAA;AAAIA,MAAAA,oDAAAA;AAACA,MAAAA,0DAAAA;AAAKA,MAAAA,0DAAAA;AAC3DA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AACEA,MAAAA,wDAAAA;AAAA,eAAmB6E,qBAAnB;AAAoC,OAApC;AACA7E,MAAAA,wDAAAA;AAGFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACAA,MAAAA,wDAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AAIAA,MAAAA,4DAAAA;AACEA,MAAAA,4DAAAA;AAAwDA,MAAAA,oDAAAA;AAAIA,MAAAA,0DAAAA;AAC9DA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;AACFA,MAAAA,0DAAAA;;;;AAnEsEA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA;AAOnCA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA;AAMTA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAEiBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAO7BA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAMSA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQAA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA,4BAAsB,aAAtB,EAAsB6E,4BAAtB;AAGG7E,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAQWA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAEaA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;AAKxBA,MAAAA,uDAAAA;AAAAA,MAAAA,wDAAAA;;;;;;AD/CbC,gCAAgC,uDAN5CF,qEAAe,EAM6B,GAAhCE,gCAAgC,CAAhC;;;;;;;;;;;;;;;;;;;;;;;AEfkC;AAC/C,oFAAoF;AACiC;AAE9D;AACW;AAC2B;AAC3B;;;AAE3D,MAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8HAAgC;KAC5C;CACF;AAYM,MAAM,yBAAyB;;kGAAzB,yBAAyB;sHAAzB,yBAAyB;0HAL3B;YACP,yDAAY,EAAE,kEAAqB,CAAC,MAAM,CAAC,EAAE,4EAAgB;YAC7D,uDAAW,EAAE,+DAAmB,EAAE,uGAAoB;SACvD;mIAEU,yBAAyB;QARlC,gCAAgC;QAChC,8HAAgC,aAGhC,yDAAY,EAAE,2DAA+B,4EAAgB;QAC7D,uDAAW,EAAE,+DAAmB,EAAE,uGAAoB","sources":["./src/app/module/business-unit-profile/business-unit-edit-profile/business-unit-edit-profile.component.ts","./src/app/module/business-unit-profile/business-unit-edit-profile/business-unit-edit-profile.component.html","./src/app/module/business-unit-profile/business-unit-profile.module.ts"],"sourcesContent":["import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AddressService } from 'src/app/service/address.service';\r\nimport { BusinessUnitService } from 'src/app/service/business-unit.service';\r\nimport { CommonService } from 'src/app/service/common.service';\r\nimport { DataService } from 'src/app/service/data.service';\r\n\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-business-unit-edit-profile',\r\n  templateUrl: './business-unit-edit-profile.component.html',\r\n  styleUrls: ['./business-unit-edit-profile.component.scss']\r\n})\r\nexport class BusinessUnitEditProfileComponent implements OnInit {\r\n\r\n  loadingState = false;\r\n  addForm: FormGroup;\r\n  showLoader = false;\r\n  formErrors = { code: null, addressId: null, apierror: null, };\r\n  isEditing = true;\r\n  currentUser: any;\r\n  addressListArray: any = [];\r\n  buListArray: any = [];\r\n  selectedBUID: any = \"\";\r\n  selectedBU: any;\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private toastrService: ToastrService,\r\n    private fb: FormBuilder,\r\n    private businessUnitService: BusinessUnitService,\r\n    private dataService: DataService,\r\n    private commonService: CommonService,\r\n    private addressService: AddressService\r\n  ) {\r\n    this.addForm = this.fb.group({\r\n      name: [null, Validators.compose([Validators.required])],\r\n      code: [null, Validators.compose([Validators.required])],\r\n      addressId: [null, Validators.compose([Validators.required])],\r\n      csvTemplate: [''],\r\n      activeTemplateId: [null],\r\n    });\r\n\r\n    this.dataService.currentUser.subscribe((user) => {\r\n      if (user) {\r\n        this.currentUser = user;\r\n        this.getBUData();\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAddressList();\r\n  }\r\n\r\n  getBUData() {\r\n    let filters = [];\r\n    this.currentUser.businessUnitIds.map((data) => {\r\n      filters.push({ \"propertyName\": \"Code\", \"value\": data, \"caseSensitive\": true })\r\n    });\r\n    let searchFilterBU = { \"conditionOperator\": 1, \"filters\": filters }\r\n    this.businessUnitService.getBusinessUnitList({\r\n      \"searchFilter\": searchFilterBU,\r\n      \"page\": 1,\r\n      \"pageSize\": 0,\r\n      \"fields\": null\r\n    }).subscribe((res) => {\r\n\r\n      if (res) {\r\n        this.buListArray = res.data;\r\n        if (this.buListArray.length > 0) {\r\n          this.selectedBUID = this.buListArray[0].id;\r\n          this.selectedBU = this.buListArray[0];\r\n          this.onBUChange();\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getAddressList() {\r\n    const params: any = {\r\n      fields: null,\r\n      page: 1,\r\n      pageSize: 0\r\n    };\r\n\r\n    this.addressService.getAddressList(params).subscribe((response) => {\r\n      this.loadingState = false;\r\n      if (response.data) {\r\n        this.addressListArray = response.data;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onAddressChange() {\r\n    if (this.addForm.value['addressId'] && (this.addForm.value['addressId'].length > 2)) {\r\n      this.addForm.controls['addressId'].setErrors({ isMax: true });\r\n      this.formErrors['addressId'] = 'Please Select any two address';\r\n    } else {\r\n      this.addForm.controls[\"addressId\"].setValidators([Validators.required]);\r\n      this.formErrors['addressId'] = false;\r\n    }\r\n    this.addForm.get('addressId').updateValueAndValidity();\r\n  }\r\n\r\n  onCheckCodeExist() {\r\n    this.businessUnitService.checkCodeExists(this.addForm.value.code).subscribe((res) => {\r\n      if (res.message == 'Exist') {\r\n        this.addForm.controls['code'].setErrors({ isExit: true });\r\n        this.formErrors['code'] = 'Business unit code already exit';\r\n      } else {\r\n        this.addForm.controls['code'].setErrors(null);\r\n        this.formErrors['code'] = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  async submitForm() {\r\n    if (!this.selectedBUID) {\r\n      this.toastrService.error('Please select Business unit');\r\n      return;\r\n    }\r\n    if (this.addForm.valid) {\r\n      this.showLoader = true;\r\n      if (this.isEditing) {\r\n        this.businessUnitService.saveBusinessUnit({ ...this.addForm.value, id: this.selectedBU.id }).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response) {\r\n            this.location.back();\r\n          } else { }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      } else {\r\n        this.showLoader = false;\r\n      }\r\n    }\r\n  }\r\n  onBUChange() {\r\n    console.log(this.selectedBUID);\r\n    this.buListArray.map((data) => {\r\n      if (this.selectedBUID == data.id) {\r\n        this.selectedBU = data;\r\n        this.addForm.patchValue(this.selectedBU);\r\n      }\r\n    })\r\n  }\r\n  ngOnDestroy(): void { }\r\n}\r\n","<section class=\"side_container\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"main-page\">\r\n      <div class=\"row 0\">\r\n        <div class=\"col add-brdcmb\">\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Home</a></li>\r\n              <li class=\"breadcrumb-item active\" routerLink=\"/business-unit\" aria-current=\"page\">Business Unit</li>\r\n              <li class=\"breadcrumb-item active\" aria-current=\"page\"> {{isEditing ? 'Update':'Add'}} BU</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <div class=\"main-div padding-x\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <h3 class=\"form-hadding\">{{isEditing ? 'Update':'Add'}} Business Unit</h3>\r\n        </div>\r\n        <div class=\"form-group w-45 input-fildcl\">\r\n          <label for=\"lname\" class=\"control-label\">Business Unit <em>*</em></label>\r\n          <div class=\"\">\r\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n              <mat-select [(ngModel)]=\"selectedBUID\" placeholder=\"Select Business Unit\"\r\n                (selectionChange)=\"onBUChange()\">\r\n                <mat-option *ngFor=\"let bu of buListArray\" [value]=\"bu?.id\">\r\n                  {{bu?.name}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <form [formGroup]=\"addForm\" (ngSubmit)=\"submitForm()\" class=\"pt-5 row justify-content-between\">\r\n\r\n          <div class=\"form-group w-45  input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Business Unit Name <em>*</em></label>\r\n            <div class=\"inpu-t\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['name']\" matInput placeholder=\"Ex : Human Resource\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Business Unit Code <em>*</em></label>\r\n            <div class=\"disable\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [readonly]=\"isEditing\" (input)=\"onCheckCodeExist()\" [formControl]=\"addForm.controls['code']\"\r\n                  matInput placeholder=\"Ex : code\" />\r\n              </mat-form-field>\r\n              <mat-error *ngIf=\"formErrors?.code\">{{formErrors?.code}}</mat-error>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Address <em>*</em></label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-select multiple [formControl]=\"addForm.controls['addressId']\" placeholder=\"Select Address\"\r\n                  (selectionChange)=\"onAddressChange()\">\r\n                  <mat-option *ngFor=\"let address of addressListArray\" [value]=\"address?.id\">\r\n                    {{address?.addressName}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <mat-error *ngIf=\"formErrors?.addressId\">{{formErrors?.addressId}}</mat-error>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"d-flex justify-content-center margin-y\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\">Save</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- <fullscreen-loading *ngIf=\"showLoader\"></fullscreen-loading> -->\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BusinessUnitProfileComponent } from './business-unit-profile.component';\nimport { BusinessUnitEditProfileComponent } from './business-unit-edit-profile/business-unit-edit-profile.component';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\nimport { MaterialExModule } from 'src/app/shared/material.module';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: BusinessUnitEditProfileComponent\n  }\n]\n\n@NgModule({\n  declarations: [\n    // BusinessUnitProfileComponent,\n    BusinessUnitEditProfileComponent\n  ],\n  imports: [\n    CommonModule, RouterModule.forChild(routes), MaterialExModule,\n    FormsModule, ReactiveFormsModule, FormValidationModule\n  ]\n})\nexport class BusinessUnitProfileModule { }\n"],"names":["Validators","AutoUnsubscribe","i0","BusinessUnitEditProfileComponent","constructor","location","toastrService","fb","businessUnitService","dataService","commonService","addressService","code","addressId","apierror","addForm","group","name","compose","required","csvTemplate","activeTemplateId","currentUser","subscribe","user","getBUData","ngOnInit","getAddressList","filters","businessUnitIds","map","data","push","searchFilterBU","getBusinessUnitList","res","buListArray","length","selectedBUID","id","selectedBU","onBUChange","params","fields","page","pageSize","response","loadingState","addressListArray","onAddressChange","value","controls","setErrors","isMax","formErrors","setValidators","get","updateValueAndValidity","onCheckCodeExist","checkCodeExists","message","isExit","submitForm","error","valid","showLoader","isEditing","saveBusinessUnit","Object","back","console","log","patchValue","ngOnDestroy","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}