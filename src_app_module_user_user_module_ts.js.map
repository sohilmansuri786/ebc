{"version":3,"file":"src_app_module_user_user_module_ts.js","mappings":"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","sources":["./src/app/module/user/add-user/add-user.component.ts","./src/app/module/user/add-user/add-user.component.html","./src/app/module/user/bulk-upload-user/bulk-upload-user.component.ts","./src/app/module/user/bulk-upload-user/bulk-upload-user.component.html","./src/app/module/user/user-list/user-list.component.ts","./src/app/module/user/user-list/user-list.component.html","./src/app/module/user/user.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BusinessUnitService } from 'src/app/service/business-unit.service';\r\nimport { CommonService } from 'src/app/service/common.service';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { RoleService } from 'src/app/service/role.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { validateAllFormFields } from 'src/app/shared/common';\r\n\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.scss']\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  sataticFillds = []\r\n  loadingState = false;\r\n  addForm: FormGroup;\r\n  showLoader = false;\r\n  hide = true;\r\n  formErrors = {\r\n    emailId: null,\r\n    apierror: null,\r\n  };\r\n  attributeArray: FormArray;\r\n  roleListArray: any = [];\r\n  isEditing = false;\r\n  editId = null;\r\n  // isPasswordType: string = 'password';\r\n  // isShowPassword: boolean = false;\r\n  pageTitle = 'Add User';\r\n  buListArray: any = [];\r\n  attributeFieldsName: any = [];\r\n  attributeDisplayFieldsName: any = [];\r\n  attributeList: any = [];\r\n  editObject: any;\r\n  currentUser: any;\r\n  notDynamicAttributeArray: any = [];\r\n  selectedProfileFile: any;\r\n  staticField = ['emailid', 'firstname', 'nativename', 'lastname', 'designation', 'primarycontact', 'profilepicture', 'secondarycontact'];\r\n  dynamicToStaticFields: any = [];\r\n  // password: any;\r\n  isMultipleBU: boolean = false;\r\n  input: any;\r\n  emailRegEx = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\r\n  searchFilterBU: any = null;\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private businessUnitService: BusinessUnitService,\r\n    private roleService: RoleService,\r\n    private toastService: ToastrService,\r\n    private dataService: DataService,\r\n    private commonService: CommonService\r\n  ) {\r\n    this.addForm = this.fb.group({\r\n      emailId: [null, [Validators.required, Validators.pattern(this.emailRegEx)]],\r\n      firstName: [\"\"],\r\n      lastName: [null, Validators.compose([Validators.required])],\r\n      nativeName: [\"\"],\r\n      roleId: [null, Validators.compose([Validators.required])],\r\n      designation: [null, Validators.compose([Validators.required])],\r\n      primaryContact: [null, Validators.compose([Validators.required, Validators.minLength(8), Validators.maxLength(20)])],\r\n      profilePicture: [null, Validators.compose([Validators.required])],\r\n      // password: [null, Validators.compose([Validators.required, Validators.minLength(4)])],\r\n      // address: fb.group({\r\n      //   building: [null, Validators.compose([Validators.required])],\r\n      //   street: [null, Validators.compose([Validators.required])],\r\n      //   locality: [null, Validators.compose([Validators.required])],\r\n      //   postalcode: [null, Validators.compose([Validators.required])],\r\n      //   city: [null, Validators.compose([Validators.required])],\r\n      //   state: [null, Validators.compose([Validators.required])],\r\n      //   country: [null, Validators.compose([Validators.required])]\r\n      // }),\r\n      businessUnitIds: [null],\r\n      secondaryContact: [null, Validators.compose([Validators.minLength(8), Validators.maxLength(20)])],\r\n      attributes: new FormArray([]),\r\n    });\r\n\r\n    if (this.activatedRoute.snapshot.paramMap.get('id')) {\r\n      this.isEditing = true;\r\n      this.editId = this.activatedRoute.snapshot.paramMap.get('id');\r\n      this.isEditing ? this.pageTitle = 'Update User' : this.pageTitle = 'Add User';\r\n      // this.addForm.get('password').clearValidators();\r\n      // this.addForm.get('password').updateValueAndValidity();\r\n    }\r\n    this.dataService.currentUser.subscribe((data) => {\r\n      if (data) {\r\n        this.currentUser = data;\r\n        this.getMasterData();\r\n        if (this.currentUser?.userType != 'Super Admin') {\r\n          this.addForm.get('businessUnitIds').setValidators(Validators.compose([Validators.required]));\r\n          this.addForm.get('businessUnitIds').updateValueAndValidity();\r\n        } else {\r\n          this.addForm.get('businessUnitIds').clearValidators();\r\n          this.addForm.get('businessUnitIds').updateValueAndValidity();\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.isEditing) {\r\n      this.getEditObject()\r\n    }\r\n  }\r\n\r\n  getMasterData() {\r\n    let filters = [];\r\n    if (this.currentUser && this.currentUser.businessUnitIds && this.currentUser.businessUnitIds[0] ) {\r\n      this.currentUser.businessUnitIds.map((data) => {\r\n        filters.push({ \"propertyName\": \"Code\", \"value\": data, \"caseSensitive\": true })\r\n      });\r\n      this.searchFilterBU = { \"conditionOperator\": 1, \"filters\": filters }\r\n    }\r\n\r\n    this.businessUnitService.getBusinessUnitList({\r\n      \"searchFilter\": this.searchFilterBU,\r\n      \"page\": 1,\r\n      \"pageSize\": 0,\r\n      \"fields\": null\r\n    }).subscribe((res) => {\r\n      if (res) {\r\n        this.loadingState = false;\r\n        this.buListArray = res.data;\r\n        if (this.buListArray.length > 0) {\r\n          // this.addForm.patchValue({ businessUnitIds: this.buListArray[0].code })\r\n          // this.onBUChange();\r\n        }\r\n      }\r\n    });\r\n    if (this.currentUser) {\r\n      let filters = [];\r\n      this.currentUser.roleList.map((type) => { filters.push({ \"propertyName\": \"RoleType\", \"value\": type, \"caseSensitive\": true }) })\r\n      this.roleService.getRoleList({ \"page\": 1, \"pageSize\": 0, \"fields\": null, \"searchFilter\": { \"conditionOperator\": 1, \"filters\": filters } }).subscribe((res) => {\r\n        if (res) { this.roleListArray = res.data; this.setRoleById(); }\r\n      });\r\n    }\r\n  }\r\n\r\n  setRoleById() {\r\n    if (this.editObject && this.editObject.roleId)\r\n      for (let index = 0; index < this.roleListArray.length; index++) {\r\n        const element = this.roleListArray[index];\r\n        if (element.id == this.editObject.roleId) { this.addForm.patchValue({ roleId: element.name }); break; } else continue;\r\n      }\r\n  }\r\n\r\n  getEditObject() {\r\n    this.userService.getUserById({ id: this.editId }).subscribe((response) => {\r\n      if (response) {\r\n        this.editObject = response.data;\r\n        // this.password = response.data.password;\r\n        this.addForm.patchValue({ ...response.data, password: '' });\r\n\r\n        if (response.data.businessUnitIds && response.data.role != 'BU Admin') {\r\n          this.addForm.patchValue({ businessUnitIds: response.data.businessUnitIds[0] });\r\n        } else if (response.data.businessUnitIds && response.data.role == 'BU Admin') {\r\n          this.isMultipleBU = true;\r\n          this.addForm.patchValue({ businessUnitIds: response.data.businessUnitIds });\r\n        }\r\n\r\n        this.attributeArray = this.addForm.get('attributes') as FormArray;\r\n        this.attributeArray.clear();\r\n        this.attributeFieldsName = [];\r\n        this.attributeDisplayFieldsName = [];\r\n        this.attributeList = [];\r\n        this.setRoleById();\r\n        if (response.data && response.data.buSpecificAttributes) {\r\n          response.data.buSpecificAttributes.map((data) => {\r\n            if (!this.staticField.includes(String(data.displayName)?.replace(/\\s/g, '').toLowerCase())) {\r\n              if (data.isDynamic) {\r\n                this.attributeList.push(data);\r\n                this.attributeDisplayFieldsName.push(data.displayName)\r\n                this.attributeFieldsName.push(data.attributeName);\r\n                if (String(data.attributeType).toLowerCase() == 'image') {\r\n                  this.attributeArray.push(this.fb.group({\r\n                    [data.attributeName]: [data.value, Validators.required],\r\n                    [`${data.attributeName}_img`]: [data.value]\r\n                  }));\r\n                } else {\r\n                  this.attributeArray.push(this.fb.group({ [data.attributeName]: [data.value, Validators.required] }));\r\n                }\r\n\r\n              } else {\r\n                this.notDynamicAttributeArray.push(data);\r\n              }\r\n            } else {\r\n              if (data.isDynamic) { this.dynamicToStaticFields.push(data); } else {\r\n                this.notDynamicAttributeArray.push(data);\r\n              }\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        this.router.navigateByUrl('/user');\r\n      }\r\n    });\r\n  }\r\n\r\n  async submitForm() {\r\n    console.log(this.addForm);\r\n\r\n    if (this.attributeArray && this.attributeArray.length > 0) {\r\n      this.attributeArray.controls.forEach((control: any, i) => { validateAllFormFields(control) });\r\n    }\r\n    if (this.addForm.valid) {\r\n      this.showLoader = true;\r\n      if (this.selectedProfileFile) {\r\n        const data = new FormData(); data.append('file', this.selectedProfileFile);\r\n        await this.commonService.fileUpload(data).then((res: any) => { this.addForm.get('profilePicture').setValue(res.data); })\r\n      }\r\n      let BuAttributes: any = [];\r\n      if (this.attributeArray && this.attributeArray.length > 0) {\r\n        this.attributeArray.controls.forEach((control: any, i) => { validateAllFormFields(control) });\r\n        this.addForm.value.attributes.map((data, i) => {\r\n          Object.keys(data).forEach((key) => {\r\n            if (!key.includes('_img'))\r\n              BuAttributes.push({ ...this.attributeList[i], \"attributeName\": key, \"value\": data[key], });\r\n          });\r\n        })\r\n      }\r\n      this.dynamicToStaticFields.map((data) => {\r\n        switch (String(data.displayName)?.replace(/\\s/g, '').toLowerCase()) {\r\n          case 'firstname': BuAttributes.push({ ...data, value: this.addForm.value.firstName }); break;\r\n          case 'emailid': BuAttributes.push({ ...data, value: this.addForm.value.emailId }); break;\r\n          case 'lastname': BuAttributes.push({ ...data, value: this.addForm.value.lastName }); break;\r\n          case 'nativename': BuAttributes.push({ ...data, value: this.addForm.value.nativeName }); break;\r\n          case 'designation': BuAttributes.push({ ...data, value: this.addForm.value.designation }); break;\r\n          case 'primarycontact': BuAttributes.push({ ...data, value: this.addForm.value.primaryContact }); break;\r\n          case 'secondarycontact': BuAttributes.push({ ...data, value: this.addForm.value.secondaryContact }); break;\r\n          case 'profilepicture': BuAttributes.push({ ...data, value: this.addForm.value.profilePicture }); break;\r\n        }\r\n      })\r\n\r\n      BuAttributes = [...BuAttributes, ...this.notDynamicAttributeArray];\r\n      let data = { ...this.addForm.value, buSpecificAttributes: BuAttributes };\r\n      if (this.addForm.value.businessUnitIds && this.currentUser?.userType != 'Super Admin') {\r\n        let temp = this.isMultipleBU ? this.addForm.value.businessUnitIds : [this.addForm.value.businessUnitIds]\r\n        data = { ...data, businessUnitIds: temp }\r\n      }\r\n      else { data = { ...data, businessUnitIds: [] } }\r\n      delete data.attributes;\r\n      data['fullName'] = data.firstName + ' ' + data.lastName;\r\n      if (this.isEditing) {\r\n        delete data.password;\r\n        // if (this.addForm.value.password) {\r\n        //   data.password = this.addForm.value.password;\r\n        // } else {\r\n        //   data.password = this.password;\r\n        // }\r\n\r\n        this.userService.saveUser({ ...data, id: this.editId, isActive: true }).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response) {\r\n\r\n            if (this.addForm.value.emailId == this.currentUser.emailId) {\r\n              this.dataService.currentUserSubject.next({ ...this.currentUser, ...response.data })\r\n            }\r\n            this.router.navigateByUrl('/user');\r\n          } else {\r\n            this.toastService.error(response.message)\r\n            response.error.map(obj => {\r\n              if (obj.hasOwnProperty('emailId')) {\r\n                this.formErrors['emailId'] = obj['emailId'];\r\n              } else {\r\n                this.formErrors['apierror'] = `* ${response.error}`;\r\n              }\r\n            });\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      } else {\r\n        this.userService.saveUser({ ...data, isActive: true }).subscribe((response) => {\r\n          this.showLoader = false;\r\n          if (response.status == 'Ok') {\r\n            this.router.navigateByUrl('/user');\r\n          } else {\r\n            this.toastService.error(response.message)\r\n            response.error.map(obj => {\r\n              if (obj.hasOwnProperty('emailId')) {\r\n                this.formErrors['emailId'] = obj['emailId'];\r\n              } else {\r\n                this.formErrors['apierror'] = `* ${response.error}`;\r\n              }\r\n            });\r\n          }\r\n        }, (error) => {\r\n          this.showLoader = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n  // showPassword() {\r\n  //   this.isShowPassword = !this.isShowPassword;\r\n  //   this.isShowPassword ? this.isPasswordType = 'text' : this.isPasswordType = 'password';\r\n  // }\r\n  onBUChange() {\r\n    this.buListArray.map((data => {\r\n      if (data.code == this.addForm.value.businessUnitIds) {\r\n        this.attributeArray = this.addForm.get('attributes') as FormArray;\r\n        this.attributeArray.clear();\r\n        this.attributeFieldsName = [];\r\n        this.attributeDisplayFieldsName = [];\r\n        this.attributeList = [];\r\n        data.template.attributes.map((data) => {\r\n          if (!this.staticField.includes(String(data.displayName)?.replace(/\\s/g, '').toLowerCase())) {\r\n            if (data.isDynamic) {\r\n              this.attributeList.push(data);\r\n              this.attributeFieldsName.push(data.attributeName);\r\n              this.attributeDisplayFieldsName.push();\r\n              if (String(data.attributeType).toLowerCase() == 'image') {\r\n                this.attributeArray.push(this.fb.group({\r\n                  [data.attributeName]: ['', Validators.required],\r\n                  [`${data.attributeName}_img`]: ['']\r\n                }));\r\n              } else {\r\n                this.attributeArray.push(this.fb.group({ [data.attributeName]: ['', Validators.required] }));\r\n              }\r\n            } else {\r\n              this.notDynamicAttributeArray.push(data);\r\n            }\r\n          } else {\r\n            if (data.isDynamic) { this.dynamicToStaticFields.push(data); } else {\r\n              this.notDynamicAttributeArray.push(data);\r\n            }\r\n\r\n          }\r\n        })\r\n      }\r\n      // }\r\n    }))\r\n  }\r\n  profileChangeEvent(fileInputFile: any) {\r\n    const reg = /(.*?)\\.(jpg|jpeg|png|gif|giff)$/;\r\n    if (!fileInputFile.target.files[0].name.match(reg)) {\r\n      this.toastService.error('Please select valid file');\r\n      this.selectedProfileFile = null;\r\n      return false;\r\n    } else {\r\n      this.selectedProfileFile = null;\r\n      this.selectedProfileFile = fileInputFile.target.files[0];\r\n      this.addForm.get('profilePicture').setValue(this.selectedProfileFile.name);\r\n    }\r\n  }\r\n\r\n  // Image fields in attributes Array\r\n  SelectedFile: any;\r\n  selectedIndex: number = 0;\r\n  async fileChangeEvent(fileInputFile: any, i) {\r\n    this.selectedIndex = i;\r\n    const reg = /(.*?)\\.(jpg|jpeg|png|gif|giff)$/;\r\n    if (!fileInputFile.target.files[0].name.match(reg)) {\r\n      this.toastService.error('Please select valid file');\r\n      this.RemoveFile();\r\n      return false;\r\n    } else {\r\n      this.RemoveFile();\r\n      this.SelectedFile = fileInputFile.target.files[0];\r\n      this.addForm.controls['attributes']['controls'][i].patchValue({ [`${this.attributeFieldsName[i]}_img`]: this.SelectedFile.name })\r\n      const data = new FormData(); data.append('file', this.SelectedFile);\r\n      await this.commonService.fileUpload(data).then((res: any) => {\r\n        this.addForm.controls['attributes']['controls'][this.selectedIndex].patchValue({ [`${this.attributeFieldsName[this.selectedIndex]}`]: res.data })\r\n      })\r\n    }\r\n  }\r\n  RemoveFile() {\r\n    this.SelectedFile = null;\r\n  }\r\n  verifyEmail() {\r\n    this.userService.checkLoginIdExists({ emailId: this.addForm.value.emailId }).subscribe((res) => {\r\n      if (res.message == 'Exist') {\r\n        this.addForm.controls['emailId'].setErrors({ isExit: true });\r\n        this.formErrors['emailId'] = 'Email already exit';\r\n      } else {\r\n        this.addForm.controls['emailId'].setErrors(null);\r\n        this.formErrors['emailId'] = false;\r\n      }\r\n    })\r\n  }\r\n  onRoleChange() {\r\n    this.addForm.patchValue({ businessUnitIds: [] })\r\n    if (this.addForm.value.roleId == 'BUAdmin') {\r\n      this.isMultipleBU = true;\r\n    }\r\n    else this.isMultipleBU = false;\r\n  }\r\n\r\n  keyPressAlphaNumerics(event: any) {\r\n    var inp = String.fromCharCode(event.keyCode);\r\n    if (/[0-9+]/.test(inp)) {\r\n      return true;\r\n    } else {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void { }\r\n\r\n}\r\n","<section class=\"side_container\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"main-page\">\r\n      <div class=\"row 0\">\r\n        <div class=\"col add-brdcmb\">\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\">\r\n                <a routerLink=\"/dashboard\">Home</a>\r\n              </li>\r\n              <li class=\"breadcrumb-item\"><a routerLink=\"/user\">User</a></li>\r\n              <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n                {{ pageTitle }}\r\n              </li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <div class=\"main-div padding-x\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <h3 class=\"form-hadding\">{{ pageTitle }}</h3>\r\n        </div>\r\n        <form [formGroup]=\"addForm\" (ngSubmit)=\"submitForm()\" class=\"form_field row justify-content-between\">\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Role <em>*</em></label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-select [formControl]=\"addForm.controls['roleId']\" (selectionChange)=\"onRoleChange()\">\r\n                  <mat-option *ngFor=\"let item of roleListArray\" [value]=\"item?.name\">\r\n                    {{ item?.name }}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"currentUser?.userType != 'Super Admin'\" class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Business Unit <em>*</em></label>\r\n            <div class=\"\">\r\n              <ng-container *ngIf=\"isMultipleBU; else BUIDTemplate\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <mat-select multiple (selectionChange)=\"onBUChange()\"\r\n                    [formControl]=\"addForm.controls['businessUnitIds']\">\r\n                    <mat-option *ngFor=\"let item of buListArray\" [value]=\"item.code\">\r\n                      {{ item.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </ng-container>\r\n              <ng-template #BUIDTemplate>\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <mat-select (selectionChange)=\"onBUChange()\" [formControl]=\"addForm.controls['businessUnitIds']\">\r\n                    <mat-option *ngFor=\"let item of buListArray\" [value]=\"item.code\">\r\n                      {{ item.name }}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n              </ng-template>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">First Name </label>\r\n            <div class=\"inpu-t\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['firstName']\" maxlength=\"50\" matInput placeholder=\"Ex : Jack\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Last Name <em>*</em></label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['lastName']\" maxlength=\"50\" type=\"text\" matInput\r\n                  placeholder=\"Ex : Rider\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Native Name</label>\r\n            <div class=\"inpu-t\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['nativeName']\" matInput placeholder=\"Ex : Jack\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\"> Email <em>*</em></label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['emailId']\" type=\"email\" matInput\r\n                  placeholder=\"Ex : abc@gmail.com\" (change)=\"verifyEmail()\"\r\n                  [class.is-invalid]=\"addForm.get('emailId').invalid && addForm.get('emailId').touched\" />\r\n                <div\r\n                  *ngIf=\"(addForm.get('emailId').invalid && addForm.get('emailId').touched) || addForm.get('emailId').dirty\">\r\n                  <small class=\"text-danger\" *ngIf=\"addForm.get('emailId').errors?.required\">Email address is\r\n                    required</small>\r\n                  <small class=\"text-danger\" *ngIf=\"addForm.get('emailId').errors?.pattern\">Email address is\r\n                    invalid</small>\r\n                </div>\r\n\r\n              </mat-form-field>\r\n              <mat-error *ngIf=\"formErrors?.emailId\">{{formErrors?.emailId}}</mat-error>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Designation <em>*</em></label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['designation']\" type=\"text\" matInput\r\n                  placeholder=\"Ex : Engineer\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Primary Contact <em>*</em></label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['primaryContact']\" (keypress)=\"keyPressAlphaNumerics($event)\"\r\n                  matInput placeholder=\"Ex : 098645322\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Secondary Contact</label>\r\n            <div class=\"\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input [formControl]=\"addForm.controls['secondaryContact']\" (keypress)=\"keyPressAlphaNumerics($event)\"\r\n                  matInput placeholder=\"Ex : 098645322\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Profile Picture <em>*</em> </label>\r\n            <div class=\"imageoverlap\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\" (click)=\"fileInputProfile.click()\">\r\n                <input [formControl]=\"addForm.controls['profilePicture']\" matInput readonly placeholder=\"Upload\" />\r\n                <img class=\"upload-icon\" src=\"assets/images/Upload.svg\" />\r\n                <input hidden #fileInputProfile accept=\"image/x-png,image/jpeg\" (change)=\"profileChangeEvent($event)\"\r\n                  type=\"file\" file-model=\"myFile\" />\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- ============ password ============ -->\r\n\r\n          <!-- <div *ngIf=\"!isEditing\" class=\"form-group w-45 input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Password <em>*</em></label>\r\n            <div class=\"imageoverlap\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"addForm.controls['password']\"\r\n                  placeholder=\"*********\" />\r\n                  <img class=\"eye-icon\" src=\"../../../../assets/images/hidden.png\" />\r\n                  <img class=\"eye-icon\" src=\"../../../../assets/images/visibility.png\" />\r\n                  <mat-icon matSuffix class=\"eye-icon\" (click)=\"hide = !hide\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div> -->\r\n\r\n          <!-- =================  Address ============ -->\r\n\r\n          <!-- <ng-container class=\"form-group\" formGroupName=\"address\">\r\n            <div class=\"division\">\r\n              <span>Address</span>\r\n              <hr>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Street</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"street\" placeholder=\"Ex : Street\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Building</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"building\" placeholder=\"Ex : Building\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Locality</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"locality\" placeholder=\"Ex : Locality\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Postalcode</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input number matInput formControlName=\"postalcode\" placeholder=\"Ex : Postalcode\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">City</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"city\" placeholder=\"Ex : City\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">State</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"state\" placeholder=\"Ex : State\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group w-45 input-fildcl\">\r\n              <label for=\"lname\" class=\"control-label\">Country</label>\r\n              <div class=\"\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <input matInput formControlName=\"country\" placeholder=\"Ex : country\">\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n\r\n          </ng-container> -->\r\n\r\n          <!-- ============ Dynamic BU fields  ============ -->\r\n          <div *ngIf=\"attributeArray && attributeArray?.value?.length>0\" class=\"division\">\r\n            <span>Dynamic BU fields</span>\r\n            <hr />\r\n          </div>\r\n          <ng-container formArray=\"attributeArray\" *ngFor=\"let item of attributeArray?.controls; let i = index\">\r\n            <div [formGroup]=\"item\" class=\"form-group w-45\">\r\n              <ng-container *ngIf=\"attributeList[i]?.attributeType?.toLowerCase() == 'image'\r\n                  else elseTemplate\r\n                \">\r\n                <div class=\"input-fildcl\">\r\n                  <label for=\"lname\" class=\"control-label\">{{ attributeDisplayFieldsName[i] }}</label>\r\n                  <div class=\"\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\" (click)=\"fileInput.click()\">\r\n                      <input [formControl]=\"\r\n                          item['controls'][attributeFieldsName[i] + '_img']\r\n                        \" matInput readonly\r\n                        placeholder=\"Upload {{ attributeFieldsName[i].replace('{','')?.replace('}','') }}\" />\r\n                      <img class=\"upload-icon\" src=\"assets/images/Upload.svg\" />\r\n                      <input hidden #fileInput accept=\"image/x-png,image/jpeg\" (change)=\"fileChangeEvent($event, i)\"\r\n                        type=\"file\" file-model=\"myFile\" />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n              <ng-template #elseTemplate>\r\n                <div class=\"input-fildcl\">\r\n                  <label for=\"lname\" class=\"control-label\">{{attributeDisplayFieldsName[i] }} </label>\r\n                  <div class=\"\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                      <input [formControl]=\"item['controls'][attributeFieldsName[i]]\" type=\"text\" matInput\r\n                        [placeholder]=\"attributeFieldsName[i].replace('{','')?.replace('}','')\" />\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </ng-template>\r\n\r\n            </div>\r\n          </ng-container>\r\n          <div class=\"d-flex justify-content-end margin-y\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { BusinessUnitService } from 'src/app/service/business-unit.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\nimport { DataService } from 'src/app/service/data.service';\r\n\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-bulk-upload-user',\r\n  templateUrl: './bulk-upload-user.component.html',\r\n  styleUrls: ['./bulk-upload-user.component.scss']\r\n})\r\n\r\nexport class BulkUploadUserComponent implements OnInit {\r\n\r\n  buListArray: any;\r\n  selectedFile: File;\r\n  addForm: FormGroup;\r\n  downloadTemplateLink: any = '';\r\n  currentUser: any;\r\n  searchFilterBU: any = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private toastService: ToastrService,\r\n    private businessUnitService: BusinessUnitService,\r\n    private userService: UserService,\r\n    private dataService: DataService\r\n  ) {\r\n    this.addForm = this.fb.group({\r\n      code: [null, Validators.compose([Validators.required])],\r\n      file: [null, Validators.compose([Validators.required])],\r\n      file_name: [null, Validators.compose([Validators.required])],\r\n    });\r\n    this.dataService.currentUser.subscribe((data) => {\r\n      if (data) { this.currentUser = data; }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.currentUser && this.currentUser.businessUnitIds && this.currentUser.businessUnitIds[0]) {\r\n      this.getSingleObjects();\r\n    } else {\r\n      this.getBUData();\r\n    }\r\n  }\r\n  getSingleObjects() {\r\n    // this.businessUnitService.getBusinessUnitByCode({ code: this.currentUser.businessUnitIds[0] }).subscribe((res) => {\r\n    //   if (res.data) {\r\n    //     this.buListArray = [res.data];\r\n    //     if (this.buListArray.length > 0) {\r\n    //       this.addForm.get('code').setValue(this.buListArray[0].code);\r\n    //       this.onBUChange();\r\n    //     }\r\n    //   }\r\n    // }, (error) => {\r\n    //   this.buListArray = [];\r\n    // })\r\n    let filters = [];\r\n    this.currentUser.businessUnitIds.map((data) => {\r\n      filters.push({ \"propertyName\": \"Code\", \"value\": data, \"caseSensitive\": true })\r\n    });\r\n    this.searchFilterBU = { \"conditionOperator\": 1, \"filters\": filters }\r\n    this.getBUData();\r\n  }\r\n  getBUData() {\r\n    this.businessUnitService.getBusinessUnitList({\r\n      \"searchFilter\": this.searchFilterBU,\r\n      \"page\": 1,\r\n      \"pageSize\": 0,\r\n      \"fields\": null\r\n    }).subscribe((res) => {\r\n      if (res) {\r\n        this.buListArray = res.data;\r\n        if (this.buListArray.length > 0) {\r\n          this.addForm.get('code').setValue(this.buListArray[0].code);\r\n          this.onBUChange();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  fileChangeEvent(fileInputFile: any) {\r\n    const reg = /(.*?)\\.(csv|CSV)$/;\r\n    if (!fileInputFile.target.files[0].name.match(reg)) {\r\n      this.toastService.warning('Please select valid file');\r\n      this.removeFile();\r\n      return false;\r\n    } else {\r\n      this.removeFile();\r\n      this.selectedFile = fileInputFile.target.files[0];\r\n      this.addForm.get('file_name').setValue(this.selectedFile.name);\r\n      this.addForm.get('file').setValue(this.selectedFile);\r\n    }\r\n  }\r\n  removeFile() { this.selectedFile = null; }\r\n  onBUChange() {\r\n    this.buListArray.map((data) => {\r\n      if (data.code == this.addForm.value.code) {\r\n        this.downloadTemplateLink = 'https://ebcblob.blob.core.windows.net/devebc/User-bulkupload.csv'\r\n        // data.csvTemplate;\r\n      }\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.addForm.valid) {\r\n      const data = new FormData();\r\n      data.append('file', this.selectedFile);\r\n      // data.append('code', this.addForm.value.code);\r\n      this.userService.fileUpload(data, { 'code': this.addForm.value.code }).subscribe((res) => {\r\n        this.router.navigateByUrl('/user')\r\n      })\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n}\r\n","<section class=\"side_container\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"main-page\">\r\n      <div class=\"row 0\">\r\n        <div class=\"col add-brdcmb\">\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\"> <a routerLink=\"/dashboard\">Home</a> </li>\r\n              <li class=\"breadcrumb-item\"><a routerLink=\"/user\">User</a></li>\r\n              <li class=\"breadcrumb-item active\" aria-current=\"page\">File Upload</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <div class=\"main-div padding-x\">\r\n        <div class=\"d-flex justify-content-between\">\r\n          <h3 class=\"form-hadding\">File Upload</h3>\r\n        </div>\r\n        <form [formGroup]=\"addForm\" (ngSubmit)=\"submitForm()\" class=\"pt-5 row justify-content-between form_upload\">\r\n          <div class=\"form-group w-45  input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Select Business Unit</label>\r\n            <div class=\"inpu-t\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                <mat-select [disabled]=\"currentUser.userType == 'BU Admin'\" [formControl]=\"addForm.controls['code']\"\r\n                  placeholder=\"Select Business Unit\" (selectionChange)=\"onBUChange()\">\r\n                  <mat-option *ngFor=\"let bu of buListArray\" [value]=\"bu?.code\">\r\n                    {{bu?.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group w-45  input-fildcl\">\r\n            <label for=\"lname\" class=\"control-label\">Select File</label>\r\n            <div class=\"imageoverlap\">\r\n              <mat-form-field appearance=\"outline\" class=\"w-100\" (click)=\"fileInput.click()\">\r\n                <mat-label><img class=\"image-icon\" src=\"assets/images/image.svg\" />Upload</mat-label>\r\n                <input [formControl]=\"addForm.controls['file_name']\" matInput readonly placeholder=\"Upload\" />\r\n                <img class=\"upload-icon\" src=\"assets/images/Upload.svg\" />\r\n                <!-- accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"-->\r\n                <input hidden #fileInput accept=\".csv\" (change)=\"fileChangeEvent($event)\" type=\"file\"\r\n                  file-model=\"myFile\" />\r\n              </mat-form-field>\r\n            </div>\r\n            <div *ngIf=\"addForm.controls['code'].valid && downloadTemplateLink\" class=\"class\">\r\n              <a [href]=\"downloadTemplateLink\" mat-icon-button>\r\n                <mat-icon>download</mat-icon>\r\n                (Download Template)\r\n              </a>\r\n              <br>\r\n              <span class=\"note\">Bulk upload is only for End-Users</span>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"d-flex justify-content-end margin-y\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\"> <a> Upload </a> </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ActionPopupComponent } from 'src/app/core/action-popup/action-popup.component';\r\nimport { CommonService } from 'src/app/service/common.service';\r\nimport { PaginationService } from 'src/app/service/pagination.service';\r\nimport { UserService } from 'src/app/service/user.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { permission } from 'src/app/shared/permission';\r\nimport { DataService } from 'src/app/service/data.service';\r\nimport { RoleService } from 'src/app/service/role.service';\r\nimport { AutoUnsubscribe } from 'ngx-auto-unsubscribe';\r\n@AutoUnsubscribe()\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  displayedColumns: string[];\r\n  filterColumns: string[] = ['FirstName', 'EmailId', 'Role', 'LastName', 'FullName', 'businessUnitIds'];\r\n\r\n  action: any;\r\n  loadingState = true;\r\n  objectArray: any = [];\r\n  pagination: any = null;\r\n  searchText: any = null;\r\n  currentPage: any = 1;\r\n  currentPageLimit = environment.defaultPageLimit;\r\n  permissionObject: any = null;\r\n  showPagination: boolean = false;\r\n  permissionCode = permission;\r\n  searchFilter: any = {};\r\n  currentUser: any;\r\n\r\n  isShort: any = false;\r\n  sortFieldName: any;\r\n\r\n  constructor(\r\n    private paginationService: PaginationService,\r\n    private userService: UserService,\r\n    private commonService: CommonService,\r\n    public dialog: MatDialog,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    private roleService: RoleService\r\n  ) {\r\n    this.dataService.permission.subscribe((response) => {\r\n      this.permissionObject = response\r\n    });\r\n    this.dataService.currentUser.subscribe((res) => {\r\n      if (res) {\r\n        this.currentUser = res;\r\n        if (this.currentUser?.userType == 'Tenant Admin' || this.currentUser?.userType == 'BU Admin') {\r\n          this.displayedColumns = ['name', 'emailID', 'role', 'businessUnitIds', 'action'];\r\n        } else {\r\n          this.displayedColumns = ['name', 'emailID', 'role', 'action'];\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.roleList();\r\n    this.getObjects();\r\n  }\r\n  // roleList() {\r\n\r\n  // }\r\n\r\n  getObjects() {\r\n    const params: any = {\r\n      page: this.currentPage,\r\n      pageSize: this.currentPageLimit\r\n    };\r\n\r\n    if (this.sortFieldName) {\r\n      params.sortElement = {\r\n        \"propertyName\": this.sortFieldName,\r\n        \"sortOrder\": this.isShort ? 1 : -1\r\n      }\r\n    }\r\n\r\n    if (this.searchText) {\r\n      params.searchFilter = this.searchFilter;\r\n    }\r\n    this.userService.getUserList(params).subscribe((response) => {\r\n      this.loadingState = false;\r\n      if (response) {\r\n        let temp: any = []; let data = response.data; let flag = 0;\r\n        data.map((res) => {\r\n          if (res?.emailId != this.currentUser?.emailId) temp.push(res);\r\n          else flag = 1;\r\n        })\r\n        this.objectArray = temp;\r\n        this.showPagination = true;\r\n        this.pagination = this.paginationService.getPager(response['recordCount'] + flag, this.currentPage, this.currentPageLimit);\r\n      } else {\r\n        this.objectArray = [];\r\n        this.pagination = null;\r\n      }\r\n    }, (error) => {\r\n      this.loadingState = false;\r\n      this.objectArray = [];\r\n      this.pagination = null;\r\n    });\r\n  }\r\n\r\n  getPage(data: any) {\r\n    this.currentPage = data.page;\r\n    this.currentPageLimit = data.limit;\r\n    this.getObjects();\r\n  }\r\n\r\n  searchObject(text) {\r\n    this.searchText = text;\r\n    this.currentPage = 1;\r\n    let filters = [];\r\n    for (let index = 0; index < this.filterColumns.length; index++) {\r\n      const element = this.filterColumns[index];\r\n      filters.push({\r\n        \"propertyName\": element,\r\n        \"value\": this.searchText,\r\n        \"caseSensitive\": true,\r\n        \"operator\": 5,\r\n      })\r\n    }\r\n\r\n    this.searchFilter = { \"conditionOperator\": 1, filters: filters };\r\n    this.getObjects();\r\n  }\r\n\r\n  onDelete(data: any): void {\r\n    const dialogRef = this.dialog.open(ActionPopupComponent, {\r\n      width: '683px',\r\n      height: '554px',\r\n      data: { ...data, isDelete: true },\r\n      panelClass: 'delete-popup'\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result && result.is_delete) {\r\n        this.userService.deleteUser(result.id).subscribe((res) => {\r\n          this.getObjects();\r\n        })\r\n      }\r\n    });\r\n  }\r\n  sortData(name) {\r\n\r\n    // Frontend Short\r\n    // this.commonService.isShort = !this.commonService.isShort\r\n    // this.objectArray = this.commonService.sortData(name, this.objectArray);\r\n\r\n    // Backend Short\r\n    this.isShort = !this.isShort;\r\n    this.sortFieldName = name;\r\n    this.getObjects();\r\n  }\r\n  ngOnDestroy(): void { }\r\n}\r\n","<div class=\"side_container\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"main-page\">\r\n      <div class=\"row m-0 mt-3\">\r\n        <div class=\"col-md-3 admin-brdcmb mt-0\">\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\"><a routerLink=\"/dashboard\">Home</a></li>\r\n              <li class=\"breadcrumb-item active\" aria-current=\"page\">User</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n      <div class=\"row m-0\">\r\n        <div class=\"w-30\">\r\n          <search-box (text)=\"searchObject($event)\" [placeholder]=\"'Search'\"></search-box>\r\n        </div>\r\n        <div class=\"adbtn col\">\r\n          <button *ngIf=\"permissionObject?.includes(permissionCode?.bulkAddUser)\" mat-stroked-button\r\n            routerLink=\"add-bulk\" color=\"primary\"><a>+ File Upload </a></button>\r\n          <button *ngIf=\"permissionObject?.includes(permissionCode?.addUser)\" mat-raised-button routerLink=\"add\"\r\n            color=\"primary\" class=\"mr-5\"><a>+ Add</a></button>\r\n        </div>\r\n        <div class=\"col-lg-12 mt-3\">\r\n          <div class=\"main-div\" *ngIf=\"permissionObject?.includes(permissionCode?.userList)\">\r\n            <div class=\"admin-table\">\r\n              <table mat-table [dataSource]=\"objectArray\" class=\"\">\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef> Name <img (click)=\"sortData('FullName')\"\r\n                      src=\"assets/images/filter.svg\">\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    <img\r\n                      [src]=\"element?.profilePicture? element?.profilePicture :'https://ebcstorage2022.blob.core.windows.net/ebc/DefaultUser.png'\"\r\n                      class=\"rounded-circle\" alt=\"...\" /> {{element?.name}}\r\n                  </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"emailID\">\r\n                  <th mat-header-cell *matHeaderCellDef> Email </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element?.emailId}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"role\">\r\n                  <th mat-header-cell *matHeaderCellDef> Role <img (click)=\"sortData('Role')\"\r\n                      src=\"assets/images/filter.svg\">\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element?.roleId}} </td>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"currentUser?.userType == 'Tenant Admin' || currentUser?.userType == 'BU Admin'\"\r\n                  matColumnDef=\"businessUnitIds\">\r\n                  <th mat-header-cell *matHeaderCellDef> BusinessUnitCode\r\n                    <!-- <img (click)=\"sortData('BusinessUnitIds')\" src=\"assets/images/filter.svg\"> -->\r\n                  </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element?.businessUnitIds}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"action\">\r\n                  <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    <button [routerLink]=\"['edit',element?.id]\" type=\"button\" class=\"btn btn-green text-success\" *ngIf=\"\r\n                    permissionObject?.includes(permissionCode?.updateUser)\r\n                  \">\r\n                      <mat-icon>edit</mat-icon>\r\n                    </button>\r\n                    <button (click)=\"onDelete(element)\" type=\"button\" class=\"btn btn-red text-danger\" *ngIf=\"\r\n                    permissionObject?.includes(permissionCode?.deleteUser)\r\n                  \">\r\n                      <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell\" colspan=\"9999\"> No data found </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n            <div *ngIf=\"objectArray?.length>0\" class=\"mt-3\">\r\n              <pagination [paginationList]=\"pagination\" [selectedPageLimit]=\"currentPageLimit\"\r\n                [currentPage]=\"currentPage\" (onPageChange)=\"getPage($event)\">\r\n              </pagination>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormValidationModule } from 'src/app/shared/form-validation/form-validation.module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { PaginationModule } from 'src/app/core/pagination/pagination.module';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { MaterialExModule } from 'src/app/shared/material.module';\r\nimport { SearchModule } from 'src/app/core/search/search.module';\r\nimport { permission } from 'src/app/shared/permission';\r\nimport { BulkUploadUserComponent } from './bulk-upload-user/bulk-upload-user.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: UserListComponent,\r\n    data: { title: 'User List', permission: permission.userList }\r\n  },\r\n  {\r\n    path: \"add\",\r\n    component: AddUserComponent,\r\n    data: { title: 'Add User', permission: permission.addUser }\r\n  },\r\n  {\r\n    path: 'add-bulk',\r\n    component: BulkUploadUserComponent,\r\n    data: { title: 'Add Bulk User',permission: permission.addUser },\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: AddUserComponent,\r\n    data: { title: 'Update User', permission: permission.updateUser }\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [UserListComponent, AddUserComponent, BulkUploadUserComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormValidationModule,\r\n    MaterialExModule,\r\n    SharedModule,\r\n    PaginationModule,\r\n    SearchModule\r\n  ]\r\n})\r\nexport class UserModule { }\r\n"],"names":["Validators","FormArray","AutoUnsubscribe","validateAllFormFields","i0","ctx_r13","ctx_r17","_r9","_r26","ctx_r29","_r24","AddUserComponent","constructor","router","activatedRoute","fb","userService","businessUnitService","roleService","toastService","dataService","commonService","emailId","apierror","addForm","group","required","pattern","emailRegEx","firstName","lastName","compose","nativeName","roleId","designation","primaryContact","minLength","maxLength","profilePicture","businessUnitIds","secondaryContact","attributes","snapshot","paramMap","get","isEditing","editId","pageTitle","currentUser","subscribe","data","getMasterData","_a","userType","setValidators","updateValueAndValidity","clearValidators","ngOnInit","getEditObject","filters","map","push","searchFilterBU","getBusinessUnitList","res","loadingState","buListArray","length","roleList","type","getRoleList","roleListArray","setRoleById","editObject","index","element","id","patchValue","name","getUserById","response","Object","password","role","isMultipleBU","attributeArray","clear","attributeFieldsName","attributeDisplayFieldsName","attributeList","buSpecificAttributes","staticField","includes","displayName","replace","toLowerCase","isDynamic","attributeName","String","attributeType","value","notDynamicAttributeArray","dynamicToStaticFields","navigateByUrl","submitForm","console","log","controls","forEach","control","i","valid","showLoader","selectedProfileFile","FormData","append","fileUpload","then","setValue","BuAttributes","keys","key","temp","saveUser","isActive","currentUserSubject","next","error","message","obj","hasOwnProperty","formErrors","status","onBUChange","code","template","profileChangeEvent","fileInputFile","reg","target","files","match","fileChangeEvent","selectedIndex","RemoveFile","SelectedFile","verifyEmail","checkLoginIdExists","setErrors","isExit","onRoleChange","keyPressAlphaNumerics","event","inp","fromCharCode","keyCode","test","preventDefault","ngOnDestroy","selectors","decls","vars","consts","ctx","_r4"],"sourceRoot":"webpack:///"}